[
  {
    "name": "Getting updates",
    "description": "\u003cp\u003eThere are two mutually exclusive ways of receiving updates for your bot — the \u003ca href\u003d\"#getupdates\"\u003egetUpdates\u003c/a\u003e method on one hand and \u003ca href\u003d\"#setwebhook\"\u003eWebhooks\u003c/a\u003e on the other. Incoming updates are stored on the server until the bot receives them either way, but they will not be kept longer than 24 hours.\u003c/p\u003e\n\u003cp\u003eRegardless of which option you choose, you will receive JSON-serialized \u003ca href\u003d\"#update\"\u003eUpdate\u003c/a\u003e objects as a result.\u003c/p\u003e",
    "docTypes": [
      {
        "name": "Update",
        "description": "\u003cp\u003eThis \u003ca href\u003d\"#available-types\"\u003eobject\u003c/a\u003e represents an incoming update.\u003cbr\u003eAt most \u003cstrong\u003eone\u003c/strong\u003e of the optional parameters can be present in any given update.\u003c/p\u003e",
        "docFields": [
          {
            "name": "update_id",
            "description": "The update‘s unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you’re using \u003ca href\u003d\"#setwebhook\"\u003eWebhooks\u003c/a\u003e, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order. If there are no new updates for at least a week, then identifier of the next update will be chosen randomly instead of sequentially.",
            "type": "Integer",
            "required": true
          },
          {
            "name": "message",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New incoming message of any kind — text, photo, sticker, etc.",
            "type": "Message",
            "required": false
          },
          {
            "name": "edited_message",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New version of a message that is known to the bot and was edited",
            "type": "Message",
            "required": false
          },
          {
            "name": "channel_post",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New incoming channel post of any kind — text, photo, sticker, etc.",
            "type": "Message",
            "required": false
          },
          {
            "name": "edited_channel_post",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New version of a channel post that is known to the bot and was edited",
            "type": "Message",
            "required": false
          },
          {
            "name": "inline_query",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New incoming \u003ca href\u003d\"#inline-mode\"\u003einline\u003c/a\u003e query",
            "type": "InlineQuery",
            "required": false
          },
          {
            "name": "chosen_inline_result",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. The result of an \u003ca href\u003d\"#inline-mode\"\u003einline\u003c/a\u003e query that was chosen by a user and sent to their chat partner. Please see our documentation on the \u003ca href\u003d\"/bots/inline#collecting-feedback\"\u003efeedback collecting\u003c/a\u003e for details on how to enable these updates for your bot.",
            "type": "ChosenInlineResult",
            "required": false
          },
          {
            "name": "callback_query",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New incoming callback query",
            "type": "CallbackQuery",
            "required": false
          },
          {
            "name": "shipping_query",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New incoming shipping query. Only for invoices with flexible price",
            "type": "ShippingQuery",
            "required": false
          },
          {
            "name": "pre_checkout_query",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New incoming pre-checkout query. Contains full information about checkout",
            "type": "PreCheckoutQuery",
            "required": false
          }
        ]
      },
      {
        "name": "WebhookInfo",
        "description": "\u003cp\u003eContains information about the current status of a webhook.\u003c/p\u003e",
        "docFields": [
          {
            "name": "url",
            "description": "Webhook URL, may be empty if webhook is not set up",
            "type": "String",
            "required": true
          },
          {
            "name": "has_custom_certificate",
            "description": "True, if a custom certificate was provided for webhook certificate checks",
            "type": "Boolean",
            "required": true
          },
          {
            "name": "pending_update_count",
            "description": "Number of updates awaiting delivery",
            "type": "Integer",
            "required": true
          },
          {
            "name": "last_error_date",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Unix time for the most recent error that happened when trying to deliver an update via webhook",
            "type": "Integer",
            "required": false
          },
          {
            "name": "last_error_message",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Error message in human-readable format for the most recent error that happened when trying to deliver an update via webhook",
            "type": "String",
            "required": false
          },
          {
            "name": "max_connections",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery",
            "type": "Integer",
            "required": false
          },
          {
            "name": "allowed_updates",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. A list of update types the bot is subscribed to. Defaults to all update types",
            "type": "List\u003cString\u003e",
            "required": false
          }
        ]
      }
    ],
    "docMethods": [
      {
        "name": "getUpdates",
        "description": "\u003cp\u003eUse this method to receive incoming updates using long polling (\u003ca href\u003d\"http://en.wikipedia.org/wiki/Push_technology#Long_polling\"\u003ewiki\u003c/a\u003e). An Array of \u003ca href\u003d\"#update\"\u003eUpdate\u003c/a\u003e objects is returned.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003e\u003cstrong\u003eNotes\u003c/strong\u003e\u003cbr\u003e\u003cstrong\u003e1.\u003c/strong\u003e This method will not work if an outgoing webhook is set up.\u003cbr\u003e\u003cstrong\u003e2.\u003c/strong\u003e In order to avoid getting duplicate updates, recalculate \u003cem\u003eoffset\u003c/em\u003e after each server response.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "offset",
            "description": "Identifier of the first update to be returned. Must be greater by one than the highest among the identifiers of previously received updates. By default, updates starting with the earliest unconfirmed update are returned. An update is considered confirmed as soon as \u003ca href\u003d\"#getupdates\"\u003egetUpdates\u003c/a\u003e is called with an \u003cem\u003eoffset\u003c/em\u003e higher than its \u003cem\u003eupdate_id\u003c/em\u003e. The negative offset can be specified to retrieve updates starting from \u003cem\u003e-offset\u003c/em\u003e update from the end of the updates queue. All previous updates will forgotten.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "limit",
            "description": "Limits the number of updates to be retrieved. Values between 1—100 are accepted. Defaults to 100.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "timeout",
            "description": "Timeout in seconds for long polling. Defaults to 0, i.e. usual short polling. Should be positive, short polling should be used for testing purposes only.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "allowed_updates",
            "description": "List the types of updates you want your bot to receive. For example, specify [“message”, “edited_channel_post”, “callback_query”] to only receive updates of these types. See \u003ca href\u003d\"#update\"\u003eUpdate\u003c/a\u003e for a complete list of available update types. Specify an empty list to receive all updates regardless of type (default). If not specified, the previous setting will be used.\u003cbr\u003e\u003cbr\u003ePlease note that this parameter doesn\u0027t affect updates created before the call to the getUpdates, so unwanted updates may be received for a short period of time.",
            "type": "List\u003cString\u003e",
            "required": false
          }
        ]
      },
      {
        "name": "setWebhook",
        "description": "\u003cp\u003eUse this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized \u003ca href\u003d\"#update\"\u003eUpdate\u003c/a\u003e. In case of an unsuccessful request, we will give up after a reasonable amount of attempts. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e\u003cp\u003eIf you\u0027d like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. \u003ccode\u003ehttps://www.example.com/\u0026lt;token\u0026gt;\u003c/code\u003e. Since nobody else knows your bot‘s token, you can be pretty sure it’s us.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003e\u003cstrong\u003eNotes\u003c/strong\u003e\u003cbr\u003e\u003cstrong\u003e1.\u003c/strong\u003e You will not be able to receive updates using \u003ca href\u003d\"#getupdates\"\u003egetUpdates\u003c/a\u003e for as long as an outgoing webhook is set up.\u003cbr\u003e\u003cstrong\u003e2.\u003c/strong\u003e To use a self-signed certificate, you need to upload your \u003ca href\u003d\"/bots/self-signed\"\u003epublic key certificate\u003c/a\u003e using \u003cem\u003ecertificate\u003c/em\u003e parameter. Please upload as InputFile, sending a String will not work.\u003cbr\u003e\u003cstrong\u003e3.\u003c/strong\u003e Ports currently supported \u003cem\u003efor Webhooks\u003c/em\u003e: \u003cstrong\u003e443, 80, 88, 8443\u003c/strong\u003e.\u003c/p\u003e \n \u003cp\u003e\u003cstrong\u003eNEW!\u003c/strong\u003e If you\u0027re having any trouble setting up webhooks, please check out this \u003ca href\u003d\"/bots/webhooks\"\u003eamazing guide to Webhooks\u003c/a\u003e.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "url",
            "description": "HTTPS url to send updates to. Use an empty string to remove webhook integration",
            "type": "String",
            "required": true
          },
          {
            "name": "certificate",
            "description": "Upload your public key certificate so that the root certificate in use can be checked. See our \u003ca href\u003d\"/bots/self-signed\"\u003eself-signed guide\u003c/a\u003e for details.",
            "type": "InputFile",
            "required": false
          },
          {
            "name": "max_connections",
            "description": "Maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery, 1-100. Defaults to \u003cem\u003e40\u003c/em\u003e. Use lower values to limit the load on your bot‘s server, and higher values to increase your bot’s throughput.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "allowed_updates",
            "description": "List the types of updates you want your bot to receive. For example, specify [“message”, “edited_channel_post”, “callback_query”] to only receive updates of these types. See \u003ca href\u003d\"#update\"\u003eUpdate\u003c/a\u003e for a complete list of available update types. Specify an empty list to receive all updates regardless of type (default). If not specified, the previous setting will be used.\u003cbr\u003e\u003cbr\u003ePlease note that this parameter doesn\u0027t affect updates created before the call to the setWebhook, so unwanted updates may be received for a short period of time.",
            "type": "List\u003cString\u003e",
            "required": false
          }
        ]
      },
      {
        "name": "deleteWebhook",
        "description": "\u003cp\u003eUse this method to remove webhook integration if you decide to switch back to \u003ca href\u003d\"#getupdates\"\u003egetUpdates\u003c/a\u003e. Returns \u003cem\u003eTrue\u003c/em\u003e on success. Requires no parameters. \u003c/p\u003e",
        "docParameters": []
      },
      {
        "name": "getWebhookInfo",
        "description": "\u003cp\u003eUse this method to get current webhook status. Requires no parameters. On success, returns a \u003ca href\u003d\"#webhookinfo\"\u003eWebhookInfo\u003c/a\u003e object. If the bot is using \u003ca href\u003d\"#getupdates\"\u003egetUpdates\u003c/a\u003e, will return an object with the \u003cem\u003eurl\u003c/em\u003e field empty.\u003c/p\u003e",
        "docParameters": []
      }
    ]
  },
  {
    "name": "Available types",
    "description": "\u003cp\u003eAll types used in the Bot API responses are represented as JSON-objects.\u003c/p\u003e\n\u003cp\u003eIt is safe to use 32-bit signed integers for storing all \u003cstrong\u003eInteger\u003c/strong\u003e fields unless otherwise noted.\u003c/p\u003e\n\u003cblockquote\u003e \n \u003cp\u003e\u003cstrong\u003eOptional\u003c/strong\u003e fields may be not returned when irrelevant.\u003c/p\u003e \n\u003c/blockquote\u003e",
    "docTypes": [
      {
        "name": "User",
        "description": "\u003cp\u003eThis object represents a Telegram user or bot.\u003c/p\u003e",
        "docFields": [
          {
            "name": "id",
            "description": "Unique identifier for this user or bot",
            "type": "Integer",
            "required": true
          },
          {
            "name": "is_bot",
            "description": "True, if this user is a bot",
            "type": "Boolean",
            "required": true
          },
          {
            "name": "first_name",
            "description": "User‘s or bot’s first name",
            "type": "String",
            "required": true
          },
          {
            "name": "last_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. User‘s or bot’s last name",
            "type": "String",
            "required": false
          },
          {
            "name": "username",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. User‘s or bot’s username",
            "type": "String",
            "required": false
          },
          {
            "name": "language_code",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"https://en.wikipedia.org/wiki/IETF_language_tag\"\u003eIETF language tag\u003c/a\u003e of the user\u0027s language",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "Chat",
        "description": "\u003cp\u003eThis object represents a chat.\u003c/p\u003e",
        "docFields": [
          {
            "name": "id",
            "description": "Unique identifier for this chat. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.",
            "type": "Integer",
            "required": true
          },
          {
            "name": "type",
            "description": "Type of chat, can be either “private”, “group”, “supergroup” or “channel”",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title, for supergroups, channels and group chats",
            "type": "String",
            "required": false
          },
          {
            "name": "username",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Username, for private chats, supergroups and channels if available",
            "type": "String",
            "required": false
          },
          {
            "name": "first_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. First name of the other party in a private chat",
            "type": "String",
            "required": false
          },
          {
            "name": "last_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Last name of the other party in a private chat",
            "type": "String",
            "required": false
          },
          {
            "name": "all_members_are_administrators",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. True if a group has ‘All Members Are Admins’ enabled.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "photo",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Chat photo. Returned only in \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e.",
            "type": "ChatPhoto",
            "required": false
          },
          {
            "name": "description",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Description, for supergroups and channel chats. Returned only in \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e.",
            "type": "String",
            "required": false
          },
          {
            "name": "invite_link",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Chat invite link, for supergroups and channel chats. Each administrator in a chat generates their own invite links, so the bot must first generate the link using \u003ca href\u003d\"#exportchatinvitelink\"\u003eexportChatInviteLink\u003c/a\u003e. Returned only in \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e.",
            "type": "String",
            "required": false
          },
          {
            "name": "pinned_message",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Pinned message, for supergroups and channel chats. Returned only in \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e.",
            "type": "Message",
            "required": false
          },
          {
            "name": "sticker_set_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For supergroups, name of group sticker set. Returned only in \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e.",
            "type": "String",
            "required": false
          },
          {
            "name": "can_set_sticker_set",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. True, if the bot can change the group sticker set. Returned only in \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e.",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "Message",
        "description": "\u003cp\u003eThis object represents a message.\u003c/p\u003e",
        "docFields": [
          {
            "name": "message_id",
            "description": "Unique message identifier inside this chat",
            "type": "Integer",
            "required": true
          },
          {
            "name": "from",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Sender, empty for messages sent to channels",
            "type": "User",
            "required": false
          },
          {
            "name": "date",
            "description": "Date the message was sent in Unix time",
            "type": "Integer",
            "required": true
          },
          {
            "name": "chat",
            "description": "Conversation the message belongs to",
            "type": "Chat",
            "required": true
          },
          {
            "name": "forward_from",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For forwarded messages, sender of the original message",
            "type": "User",
            "required": false
          },
          {
            "name": "forward_from_chat",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For messages forwarded from channels, information about the original channel",
            "type": "Chat",
            "required": false
          },
          {
            "name": "forward_from_message_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For messages forwarded from channels, identifier of the original message in the channel",
            "type": "Integer",
            "required": false
          },
          {
            "name": "forward_signature",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For messages forwarded from channels, signature of the post author if present",
            "type": "String",
            "required": false
          },
          {
            "name": "forward_date",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For forwarded messages, date the original message was sent in Unix time",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_to_message",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For replies, the original message. Note that the Message object in this field will not contain further \u003cem\u003ereply_to_message\u003c/em\u003e fields even if it itself is a reply.",
            "type": "Message",
            "required": false
          },
          {
            "name": "edit_date",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Date the message was last edited in Unix time",
            "type": "Integer",
            "required": false
          },
          {
            "name": "media_group_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. The unique identifier of a media message group this message belongs to",
            "type": "String",
            "required": false
          },
          {
            "name": "author_signature",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Signature of the post author for messages in channels",
            "type": "String",
            "required": false
          },
          {
            "name": "text",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For text messages, the actual UTF-8 text of the message, 0-4096 characters.",
            "type": "String",
            "required": false
          },
          {
            "name": "entities",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text",
            "type": "List\u003cMessageEntity\u003e",
            "required": false
          },
          {
            "name": "caption_entities",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption",
            "type": "List\u003cMessageEntity\u003e",
            "required": false
          },
          {
            "name": "audio",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is an audio file, information about the file",
            "type": "Audio",
            "required": false
          },
          {
            "name": "document",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a general file, information about the file",
            "type": "Document",
            "required": false
          },
          {
            "name": "animation",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is an animation, information about the animation. For backward compatibility, when this field is set, the \u003cem\u003edocument\u003c/em\u003e field will also be set",
            "type": "Animation",
            "required": false
          },
          {
            "name": "game",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a game, information about the game. \u003ca href\u003d\"#games\"\u003eMore about games »\u003c/a\u003e",
            "type": "Game",
            "required": false
          },
          {
            "name": "photo",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a photo, available sizes of the photo",
            "type": "List\u003cPhotoSize\u003e",
            "required": false
          },
          {
            "name": "sticker",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a sticker, information about the sticker",
            "type": "Sticker",
            "required": false
          },
          {
            "name": "video",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a video, information about the video",
            "type": "Video",
            "required": false
          },
          {
            "name": "voice",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a voice message, information about the file",
            "type": "Voice",
            "required": false
          },
          {
            "name": "video_note",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a \u003ca href\u003d\"https://telegram.org/blog/video-messages-and-telescope\"\u003evideo note\u003c/a\u003e, information about the video message",
            "type": "VideoNote",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption for the animation, audio, document, photo, video or voice, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "contact",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a shared contact, information about the contact",
            "type": "Contact",
            "required": false
          },
          {
            "name": "location",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a shared location, information about the location",
            "type": "Location",
            "required": false
          },
          {
            "name": "venue",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a venue, information about the venue",
            "type": "Venue",
            "required": false
          },
          {
            "name": "new_chat_members",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)",
            "type": "List\u003cUser\u003e",
            "required": false
          },
          {
            "name": "left_chat_member",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. A member was removed from the group, information about them (this member may be the bot itself)",
            "type": "User",
            "required": false
          },
          {
            "name": "new_chat_title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. A chat title was changed to this value",
            "type": "String",
            "required": false
          },
          {
            "name": "new_chat_photo",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. A chat photo was change to this value",
            "type": "List\u003cPhotoSize\u003e",
            "required": false
          },
          {
            "name": "delete_chat_photo",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Service message: the chat photo was deleted",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "group_chat_created",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Service message: the group has been created",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "supergroup_chat_created",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Service message: the supergroup has been created. This field can‘t be received in a message coming through updates, because bot can’t be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "channel_chat_created",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Service message: the channel has been created. This field can‘t be received in a message coming through updates, because bot can’t be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "migrate_to_chat_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "migrate_from_chat_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. The supergroup has been migrated from a group with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "pinned_message",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Specified message was pinned. Note that the Message object in this field will not contain further \u003cem\u003ereply_to_message\u003c/em\u003e fields even if it is itself a reply.",
            "type": "Message",
            "required": false
          },
          {
            "name": "invoice",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is an invoice for a \u003ca href\u003d\"#payments\"\u003epayment\u003c/a\u003e, information about the invoice. \u003ca href\u003d\"#payments\"\u003eMore about payments »\u003c/a\u003e",
            "type": "Invoice",
            "required": false
          },
          {
            "name": "successful_payment",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message is a service message about a successful payment, information about the payment. \u003ca href\u003d\"#payments\"\u003eMore about payments »\u003c/a\u003e",
            "type": "SuccessfulPayment",
            "required": false
          },
          {
            "name": "connected_website",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. The domain name of the website on which the user has logged in. \u003ca href\u003d\"/widgets/login\"\u003eMore about Telegram Login »\u003c/a\u003e",
            "type": "String",
            "required": false
          },
          {
            "name": "passport_data",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Telegram Passport data",
            "type": "PassportData",
            "required": false
          }
        ]
      },
      {
        "name": "MessageEntity",
        "description": "\u003cp\u003eThis object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc. \u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the entity. Can be \u003cem\u003emention\u003c/em\u003e (\u003ccode\u003e@username\u003c/code\u003e), \u003cem\u003ehashtag\u003c/em\u003e, \u003cem\u003ecashtag\u003c/em\u003e, \u003cem\u003ebot_command\u003c/em\u003e, \u003cem\u003eurl\u003c/em\u003e, \u003cem\u003eemail\u003c/em\u003e, \u003cem\u003ephone_number\u003c/em\u003e, \u003cem\u003ebold\u003c/em\u003e (bold text), \u003cem\u003eitalic\u003c/em\u003e (italic text), \u003cem\u003ecode\u003c/em\u003e (monowidth string), \u003cem\u003epre\u003c/em\u003e (monowidth block), \u003cem\u003etext_link\u003c/em\u003e (for clickable text URLs), \u003cem\u003etext_mention\u003c/em\u003e (for users \u003ca href\u003d\"https://telegram.org/blog/edit#new-mentions\"\u003ewithout usernames\u003c/a\u003e)",
            "type": "String",
            "required": true
          },
          {
            "name": "offset",
            "description": "Offset in UTF-16 code units to the start of the entity",
            "type": "Integer",
            "required": true
          },
          {
            "name": "length",
            "description": "Length of the entity in UTF-16 code units",
            "type": "Integer",
            "required": true
          },
          {
            "name": "url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For “text_link” only, url that will be opened after user taps on the text",
            "type": "String",
            "required": false
          },
          {
            "name": "user",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For “text_mention” only, the mentioned user",
            "type": "User",
            "required": false
          }
        ]
      },
      {
        "name": "PhotoSize",
        "description": "\u003cp\u003eThis object represents one size of a photo or a \u003ca href\u003d\"#document\"\u003efile\u003c/a\u003e / \u003ca href\u003d\"#sticker\"\u003esticker\u003c/a\u003e thumbnail.\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique identifier for this file",
            "type": "String",
            "required": true
          },
          {
            "name": "width",
            "description": "Photo width",
            "type": "Integer",
            "required": true
          },
          {
            "name": "height",
            "description": "Photo height",
            "type": "Integer",
            "required": true
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "Audio",
        "description": "\u003cp\u003eThis object represents an audio file to be treated as music by the Telegram clients.\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique identifier for this file",
            "type": "String",
            "required": true
          },
          {
            "name": "duration",
            "description": "Duration of the audio in seconds as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "performer",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Performer of the audio as defined by sender or by audio tags",
            "type": "String",
            "required": false
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title of the audio as defined by sender or by audio tags",
            "type": "String",
            "required": false
          },
          {
            "name": "mime_type",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. MIME type of the file as defined by sender",
            "type": "String",
            "required": false
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail of the album cover to which the music file belongs",
            "type": "PhotoSize",
            "required": false
          }
        ]
      },
      {
        "name": "Document",
        "description": "\u003cp\u003eThis object represents a general file (as opposed to \u003ca href\u003d\"#photosize\"\u003ephotos\u003c/a\u003e, \u003ca href\u003d\"#voice\"\u003evoice messages\u003c/a\u003e and \u003ca href\u003d\"#audio\"\u003eaudio files\u003c/a\u003e).\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique file identifier",
            "type": "String",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Document thumbnail as defined by sender",
            "type": "PhotoSize",
            "required": false
          },
          {
            "name": "file_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Original filename as defined by sender",
            "type": "String",
            "required": false
          },
          {
            "name": "mime_type",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. MIME type of the file as defined by sender",
            "type": "String",
            "required": false
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "Video",
        "description": "\u003cp\u003eThis object represents a video file.\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique identifier for this file",
            "type": "String",
            "required": true
          },
          {
            "name": "width",
            "description": "Video width as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "height",
            "description": "Video height as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "duration",
            "description": "Duration of the video in seconds as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video thumbnail",
            "type": "PhotoSize",
            "required": false
          },
          {
            "name": "mime_type",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Mime type of a file as defined by sender",
            "type": "String",
            "required": false
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "Animation",
        "description": "\u003cp\u003eThis object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique file identifier",
            "type": "String",
            "required": true
          },
          {
            "name": "width",
            "description": "Video width as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "height",
            "description": "Video height as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "duration",
            "description": "Duration of the video in seconds as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Animation thumbnail as defined by sender",
            "type": "PhotoSize",
            "required": false
          },
          {
            "name": "file_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Original animation filename as defined by sender",
            "type": "String",
            "required": false
          },
          {
            "name": "mime_type",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. MIME type of the file as defined by sender",
            "type": "String",
            "required": false
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "Voice",
        "description": "\u003cp\u003eThis object represents a voice note.\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique identifier for this file",
            "type": "String",
            "required": true
          },
          {
            "name": "duration",
            "description": "Duration of the audio in seconds as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "mime_type",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. MIME type of the file as defined by sender",
            "type": "String",
            "required": false
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "VideoNote",
        "description": "\u003cp\u003eThis object represents a \u003ca href\u003d\"https://telegram.org/blog/video-messages-and-telescope\"\u003evideo message\u003c/a\u003e (available in Telegram apps as of \u003ca href\u003d\"https://telegram.org/blog/video-messages-and-telescope\"\u003ev.4.0\u003c/a\u003e).\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique identifier for this file",
            "type": "String",
            "required": true
          },
          {
            "name": "length",
            "description": "Video width and height (diameter of the video message) as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "duration",
            "description": "Duration of the video in seconds as defined by sender",
            "type": "Integer",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video thumbnail",
            "type": "PhotoSize",
            "required": false
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "Contact",
        "description": "\u003cp\u003eThis object represents a phone contact.\u003c/p\u003e",
        "docFields": [
          {
            "name": "phone_number",
            "description": "Contact\u0027s phone number",
            "type": "String",
            "required": true
          },
          {
            "name": "first_name",
            "description": "Contact\u0027s first name",
            "type": "String",
            "required": true
          },
          {
            "name": "last_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Contact\u0027s last name",
            "type": "String",
            "required": false
          },
          {
            "name": "user_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Contact\u0027s user identifier in Telegram",
            "type": "Integer",
            "required": false
          },
          {
            "name": "vcard",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Additional data about the contact in the form of a \u003ca href\u003d\"https://en.wikipedia.org/wiki/VCard\"\u003evCard\u003c/a\u003e",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "Location",
        "description": "\u003cp\u003eThis object represents a point on the map.\u003c/p\u003e",
        "docFields": [
          {
            "name": "longitude",
            "description": "Longitude as defined by sender",
            "type": "Float",
            "required": true
          },
          {
            "name": "latitude",
            "description": "Latitude as defined by sender",
            "type": "Float",
            "required": true
          }
        ]
      },
      {
        "name": "Venue",
        "description": "\u003cp\u003eThis object represents a venue.\u003c/p\u003e",
        "docFields": [
          {
            "name": "location",
            "description": "Venue location",
            "type": "Location",
            "required": true
          },
          {
            "name": "title",
            "description": "Name of the venue",
            "type": "String",
            "required": true
          },
          {
            "name": "address",
            "description": "Address of the venue",
            "type": "String",
            "required": true
          },
          {
            "name": "foursquare_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Foursquare identifier of the venue",
            "type": "String",
            "required": false
          },
          {
            "name": "foursquare_type",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Foursquare type of the venue. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "UserProfilePhotos",
        "description": "\u003cp\u003eThis object represent a user\u0027s profile pictures.\u003c/p\u003e",
        "docFields": [
          {
            "name": "total_count",
            "description": "Total number of profile pictures the target user has",
            "type": "Integer",
            "required": true
          },
          {
            "name": "photos",
            "description": "Requested profile pictures (in up to 4 sizes each)",
            "type": "List\u003cList\u003cPhotoSize\u003e\u003e",
            "required": true
          }
        ]
      },
      {
        "name": "File",
        "description": "\u003cp\u003eThis object represents a file ready to be downloaded. The file can be downloaded via the link \u003ccode\u003ehttps://api.telegram.org/file/bot\u0026lt;token\u0026gt;/\u0026lt;file_path\u0026gt;\u003c/code\u003e. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling \u003ca href\u003d\"#getfile\"\u003egetFile\u003c/a\u003e.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eMaximum file size to download is 20 MB\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique identifier for this file",
            "type": "String",
            "required": true
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size, if known",
            "type": "Integer",
            "required": false
          },
          {
            "name": "file_path",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File path. Use \u003ccode\u003ehttps://api.telegram.org/file/bot\u0026lt;token\u0026gt;/\u0026lt;file_path\u0026gt;\u003c/code\u003e to get the file.",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "ReplyKeyboardMarkup",
        "description": "\u003cp\u003eThis object represents a \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom keyboard\u003c/a\u003e with reply options (see \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003eIntroduction to bots\u003c/a\u003e for details and examples).\u003c/p\u003e",
        "docFields": [
          {
            "name": "keyboard",
            "description": "Array of button rows, each represented by an Array of \u003ca href\u003d\"#keyboardbutton\"\u003eKeyboardButton\u003c/a\u003e objects",
            "type": "List\u003cList\u003cKeyboardButton\u003e\u003e",
            "required": true
          },
          {
            "name": "resize_keyboard",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to \u003cem\u003efalse\u003c/em\u003e, in which case the custom keyboard is always of the same height as the app\u0027s standard keyboard.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "one_time_keyboard",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Requests clients to hide the keyboard as soon as it\u0027s been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat – the user can press a special button in the input field to see the custom keyboard again. Defaults to \u003cem\u003efalse\u003c/em\u003e.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "selective",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the \u003cem\u003etext\u003c/em\u003e of the \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e object; 2) if the bot\u0027s message is a reply (has \u003cem\u003ereply_to_message_id\u003c/em\u003e), sender of the original message.\u003cbr\u003e\u003cbr\u003e\u003cem\u003eExample:\u003c/em\u003e A user requests to change the bot‘s language, bot replies to the request with a keyboard to select the new language. Other users in the group don’t see the keyboard.",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "KeyboardButton",
        "description": "\u003cp\u003eThis object represents one button of the reply keyboard. For simple text buttons \u003cem\u003eString\u003c/em\u003e can be used instead of this object to specify text of the button. Optional fields are mutually exclusive.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e \u003cem\u003erequest_contact\u003c/em\u003e and \u003cem\u003erequest_location\u003c/em\u003e options will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "text",
            "description": "Text of the button. If none of the optional fields are used, it will be sent as a message when the button is pressed",
            "type": "String",
            "required": true
          },
          {
            "name": "request_contact",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. If \u003cem\u003eTrue\u003c/em\u003e, the user\u0027s phone number will be sent as a contact when the button is pressed. Available in private chats only",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "request_location",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. If \u003cem\u003eTrue\u003c/em\u003e, the user\u0027s current location will be sent when the button is pressed. Available in private chats only",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "ReplyKeyboardRemove",
        "description": "\u003cp\u003eUpon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see \u003ca href\u003d\"#replykeyboardmarkup\"\u003eReplyKeyboardMarkup\u003c/a\u003e). \u003c/p\u003e",
        "docFields": [
          {
            "name": "remove_keyboard",
            "description": "Requests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use \u003cem\u003eone_time_keyboard\u003c/em\u003e in \u003ca href\u003d\"#replykeyboardmarkup\"\u003eReplyKeyboardMarkup\u003c/a\u003e)",
            "type": "Boolean",
            "required": true
          },
          {
            "name": "selective",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the \u003cem\u003etext\u003c/em\u003e of the \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e object; 2) if the bot\u0027s message is a reply (has \u003cem\u003ereply_to_message_id\u003c/em\u003e), sender of the original message.\u003cbr\u003e\u003cbr\u003e\u003cem\u003eExample:\u003c/em\u003e A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven\u0027t voted yet.",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "InlineKeyboardMarkup",
        "description": "\u003cp\u003eThis object represents an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e that appears right next to the message it belongs to.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will display \u003cem\u003eunsupported message\u003c/em\u003e.\u003c/p\u003e",
        "docFields": [
          {
            "name": "inline_keyboard",
            "description": "Array of button rows, each represented by an Array of \u003ca href\u003d\"#inlinekeyboardbutton\"\u003eInlineKeyboardButton\u003c/a\u003e objects",
            "type": "List\u003cList\u003cInlineKeyboardButton\u003e\u003e",
            "required": true
          }
        ]
      },
      {
        "name": "InlineKeyboardButton",
        "description": "\u003cp\u003eThis object represents one button of an inline keyboard. You \u003cstrong\u003emust\u003c/strong\u003e use exactly one of the optional fields.\u003c/p\u003e",
        "docFields": [
          {
            "name": "text",
            "description": "Label text on the button",
            "type": "String",
            "required": true
          },
          {
            "name": "url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. HTTP or tg:// url to be opened when button is pressed",
            "type": "String",
            "required": false
          },
          {
            "name": "callback_data",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Data to be sent in a \u003ca href\u003d\"#callbackquery\"\u003ecallback query\u003c/a\u003e to the bot when button is pressed, 1-64 bytes",
            "type": "String",
            "required": false
          },
          {
            "name": "switch_inline_query",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot‘s username and the specified inline query in the input field. Can be empty, in which case just the bot’s username will be inserted.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This offers an easy way for users to start using your bot in \u003ca href\u003d\"/bots/inline\"\u003einline mode\u003c/a\u003e when they are currently in a private chat with it. Especially useful when combined with \u003ca href\u003d\"#answerinlinequery\"\u003e\u003cem\u003eswitch_pm…\u003c/em\u003e\u003c/a\u003e actions – in this case the user will be automatically returned to the chat they switched from, skipping the chat selection screen.",
            "type": "String",
            "required": false
          },
          {
            "name": "switch_inline_query_current_chat",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. If set, pressing the button will insert the bot‘s username and the specified inline query in the current chat\u0027s input field. Can be empty, in which case only the bot’s username will be inserted.\u003cbr\u003e\u003cbr\u003eThis offers a quick way for the user to open your bot in inline mode in the same chat – good for selecting something from multiple options.",
            "type": "String",
            "required": false
          },
          {
            "name": "callback_game",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Description of the game that will be launched when the user presses the button.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e This type of button \u003cstrong\u003emust\u003c/strong\u003e always be the first button in the first row.",
            "type": "CallbackGame",
            "required": false
          },
          {
            "name": "pay",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Specify True, to send a \u003ca href\u003d\"#payments\"\u003ePay button\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e This type of button \u003cstrong\u003emust\u003c/strong\u003e always be the first button in the first row.",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "CallbackQuery",
        "description": "\u003cp\u003eThis object represents an incoming callback query from a callback button in an \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e. If the button that originated the query was attached to a message sent by the bot, the field \u003cem\u003emessage\u003c/em\u003e will be present. If the button was attached to a message sent via the bot (in \u003ca href\u003d\"#inline-mode\"\u003einline mode\u003c/a\u003e), the field \u003cem\u003einline_message_id\u003c/em\u003e will be present. Exactly one of the fields \u003cem\u003edata\u003c/em\u003e or \u003cem\u003egame_short_name\u003c/em\u003e will be present. \u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e After the user presses a callback button, Telegram clients will display a progress bar until you call \u003ca href\u003d\"#answercallbackquery\"\u003eanswerCallbackQuery\u003c/a\u003e. It is, therefore, necessary to react by calling \u003ca href\u003d\"#answercallbackquery\"\u003eanswerCallbackQuery\u003c/a\u003e even if no notification to the user is needed (e.g., without specifying any of the optional parameters).\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docFields": [
          {
            "name": "id",
            "description": "Unique identifier for this query",
            "type": "String",
            "required": true
          },
          {
            "name": "from",
            "description": "Sender",
            "type": "User",
            "required": true
          },
          {
            "name": "message",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Message with the callback button that originated the query. Note that message content and message date will not be available if the message is too old",
            "type": "Message",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Identifier of the message sent via the bot in inline mode, that originated the query.",
            "type": "String",
            "required": false
          },
          {
            "name": "chat_instance",
            "description": "Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in \u003ca href\u003d\"#games\"\u003egames\u003c/a\u003e.",
            "type": "String",
            "required": true
          },
          {
            "name": "data",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Data associated with the callback button. Be aware that a bad client can send arbitrary data in this field.",
            "type": "String",
            "required": false
          },
          {
            "name": "game_short_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Short name of a \u003ca href\u003d\"#games\"\u003eGame\u003c/a\u003e to be returned, serves as the unique identifier for the game",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "ForceReply",
        "description": "\u003cp\u003eUpon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot‘s message and tapped ’Reply\u0027). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice \u003ca href\u003d\"/bots#privacy-mode\"\u003eprivacy mode\u003c/a\u003e.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003e\u003cstrong\u003eExample:\u003c/strong\u003e A \u003ca href\u003d\"https://t.me/PollBot\"\u003epoll bot\u003c/a\u003e for groups runs in privacy mode (only receives commands, replies to its messages and mentions). There could be two ways to create a new poll:\u003c/p\u003e \n\u003c/blockquote\u003e\u003cul\u003e \n \u003cli\u003eExplain the user how to send a command with parameters (e.g. /newpoll question answer1 answer2). May be appealing for hardcore users but lacks modern day polish. \u003c/li\u003e \n \u003cli\u003eGuide the user through a step-by-step process. ‘Please send me your question’, ‘Cool, now let’s add the first answer option‘, ’Great. Keep adding answer options, then send /done when you‘re ready’. \u003c/li\u003e \n\u003c/ul\u003e\u003cp\u003eThe last option is definitely more attractive. And if you use \u003ca href\u003d\"#forcereply\"\u003eForceReply\u003c/a\u003e in your bot‘s questions, it will receive the user’s answers even if it only receives replies, commands and mentions — without any extra work for the user.\u003c/p\u003e",
        "docFields": [
          {
            "name": "force_reply",
            "description": "Shows reply interface to the user, as if they manually selected the bot‘s message and tapped ’Reply\u0027",
            "type": "Boolean",
            "required": true
          },
          {
            "name": "selective",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the \u003cem\u003etext\u003c/em\u003e of the \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e object; 2) if the bot\u0027s message is a reply (has \u003cem\u003ereply_to_message_id\u003c/em\u003e), sender of the original message.",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "ChatPhoto",
        "description": "\u003cp\u003eThis object represents a chat photo.\u003c/p\u003e",
        "docFields": [
          {
            "name": "small_file_id",
            "description": "Unique file identifier of small (160x160) chat photo. This file_id can be used only for photo download.",
            "type": "String",
            "required": true
          },
          {
            "name": "big_file_id",
            "description": "Unique file identifier of big (640x640) chat photo. This file_id can be used only for photo download.",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "ChatMember",
        "description": "\u003cp\u003eThis object contains information about one member of a chat.\u003c/p\u003e",
        "docFields": [
          {
            "name": "user",
            "description": "Information about the user",
            "type": "User",
            "required": true
          },
          {
            "name": "status",
            "description": "The member\u0027s status in the chat. Can be “creator”, “administrator”, “member”, “restricted”, “left” or “kicked”",
            "type": "String",
            "required": true
          },
          {
            "name": "until_date",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Restricted and kicked only. Date when restrictions will be lifted for this user, unix time",
            "type": "Integer",
            "required": false
          },
          {
            "name": "can_be_edited",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the bot is allowed to edit administrator privileges of that user",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_change_info",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the administrator can change the chat title, photo and other settings",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_post_messages",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the administrator can post in the channel, channels only",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_edit_messages",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the administrator can edit messages of other users and can pin messages, channels only",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_delete_messages",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the administrator can delete messages of other users",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_invite_users",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the administrator can invite new users to the chat",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_restrict_members",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the administrator can restrict, ban or unban chat members",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_pin_messages",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the administrator can pin messages, supergroups only",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_promote_members",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Administrators only. True, if the administrator can add new administrators with a subset of his own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by the user)",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_send_messages",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Restricted only. True, if the user can send text messages, contacts, locations and venues",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_send_media_messages",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Restricted only. True, if the user can send audios, documents, photos, videos, video notes and voice notes, implies can_send_messages",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_send_other_messages",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Restricted only. True, if the user can send animations, games, stickers and use inline bots, implies can_send_media_messages",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_add_web_page_previews",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Restricted only. True, if user may add web page previews to his messages, implies can_send_media_messages",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "ResponseParameters",
        "description": "\u003cp\u003eContains information about why a request was unsuccessful.\u003c/p\u003e",
        "docFields": [
          {
            "name": "migrate_to_chat_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "retry_after",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. In case of exceeding flood control, the number of seconds left to wait before the request can be repeated",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "InputMediaPhoto",
        "description": "\u003cp\u003eRepresents a photo to be sent.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003ephoto\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "media",
            "description": "File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://\u0026lt;file_attach_name\u0026gt;” to upload a new one using multipart/form-data under \u0026lt;file_attach_name\u0026gt; name. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the photo to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "InputMediaVideo",
        "description": "\u003cp\u003eRepresents a video to be sent.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003evideo\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "media",
            "description": "File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://\u0026lt;file_attach_name\u0026gt;” to upload a new one using multipart/form-data under \u0026lt;file_attach_name\u0026gt; name. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the video to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video height",
            "type": "Integer",
            "required": false
          },
          {
            "name": "duration",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video duration",
            "type": "Integer",
            "required": false
          },
          {
            "name": "supports_streaming",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Pass \u003cem\u003eTrue\u003c/em\u003e, if the uploaded video is suitable for streaming",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "InputMediaAnimation",
        "description": "\u003cp\u003eRepresents an animation file (GIF or H.264/MPEG-4 AVC video without sound) to be sent.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003eanimation\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "media",
            "description": "File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://\u0026lt;file_attach_name\u0026gt;” to upload a new one using multipart/form-data under \u0026lt;file_attach_name\u0026gt; name. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the animation to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Animation width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Animation height",
            "type": "Integer",
            "required": false
          },
          {
            "name": "duration",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Animation duration",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "InputMediaAudio",
        "description": "\u003cp\u003eRepresents an audio file to be treated as music to be sent.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003eaudio\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "media",
            "description": "File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://\u0026lt;file_attach_name\u0026gt;” to upload a new one using multipart/form-data under \u0026lt;file_attach_name\u0026gt; name. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the audio to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "duration",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Duration of the audio in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "performer",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Performer of the audio",
            "type": "String",
            "required": false
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title of the audio",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "InputMediaDocument",
        "description": "\u003cp\u003eRepresents a general file to be sent.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003edocument\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "media",
            "description": "File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://\u0026lt;file_attach_name\u0026gt;” to upload a new one using multipart/form-data under \u0026lt;file_attach_name\u0026gt; name. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the document to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          }
        ]
      }
    ],
    "docMethods": []
  },
  {
    "name": "Available methods",
    "description": "\u003cblockquote\u003e \n \u003cp\u003eAll methods in the Bot API are case-insensitive. We support \u003cstrong\u003eGET\u003c/strong\u003e and \u003cstrong\u003ePOST\u003c/strong\u003e HTTP methods. Use either \u003ca href\u003d\"https://en.wikipedia.org/wiki/Query_string\"\u003eURL query string\u003c/a\u003e or \u003cem\u003eapplication/json\u003c/em\u003e or \u003cem\u003eapplication/x-www-form-urlencoded\u003c/em\u003e or \u003cem\u003emultipart/form-data\u003c/em\u003e for passing parameters in Bot API requests.\u003cbr\u003eOn successful call, a JSON-object containing the result will be returned. \u003c/p\u003e \n\u003c/blockquote\u003e",
    "docTypes": [],
    "docMethods": [
      {
        "name": "sendMessage",
        "description": "\u003cp\u003eUse this method to send text messages. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "text",
            "description": "Text of the message to be sent",
            "type": "String",
            "required": true
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in your bot\u0027s message.",
            "type": "String",
            "required": false
          },
          {
            "name": "disable_web_page_preview",
            "description": "Disables link previews for links in this message",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "forwardMessage",
        "description": "\u003cp\u003eUse this method to forward messages of any kind. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "from_chat_id",
            "description": "Unique identifier for the chat where the original message was sent (or channel username in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Message identifier in the chat specified in \u003cem\u003efrom_chat_id\u003c/em\u003e",
            "type": "Integer",
            "required": true
          }
        ]
      },
      {
        "name": "sendPhoto",
        "description": "\u003cp\u003eUse this method to send photos. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned. \u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "photo",
            "description": "Photo to send. Pass a file_id as String to send a photo that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a photo from the Internet, or upload a new photo using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "caption",
            "description": "Photo caption (may also be used when resending photos by \u003cem\u003efile_id\u003c/em\u003e), 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendAudio",
        "description": "\u003cp\u003eUse this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\u003c/p\u003e\u003cp\u003eFor sending voice messages, use the \u003ca href\u003d\"#sendvoice\"\u003esendVoice\u003c/a\u003e method instead.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "audio",
            "description": "Audio file to send. Pass a file_id as String to send an audio file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an audio file from the Internet, or upload a new one using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "caption",
            "description": "Audio caption, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "duration",
            "description": "Duration of the audio in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "performer",
            "description": "Performer",
            "type": "String",
            "required": false
          },
          {
            "name": "title",
            "description": "Track name",
            "type": "String",
            "required": false
          },
          {
            "name": "thumb",
            "description": "Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendDocument",
        "description": "\u003cp\u003eUse this method to send general files. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "document",
            "description": "File to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "thumb",
            "description": "Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "caption",
            "description": "Document caption (may also be used when resending documents by \u003cem\u003efile_id\u003c/em\u003e), 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendVideo",
        "description": "\u003cp\u003eUse this method to send video files, Telegram clients support mp4 videos (other formats may be sent as \u003ca href\u003d\"#document\"\u003eDocument\u003c/a\u003e). On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "video",
            "description": "Video to send. Pass a file_id as String to send a video that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a video from the Internet, or upload a new video using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "duration",
            "description": "Duration of sent video in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "width",
            "description": "Video width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "height",
            "description": "Video height",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb",
            "description": "Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "caption",
            "description": "Video caption (may also be used when resending videos by \u003cem\u003efile_id\u003c/em\u003e), 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "supports_streaming",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if the uploaded video is suitable for streaming",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendAnimation",
        "description": "\u003cp\u003eUse this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "animation",
            "description": "Animation to send. Pass a file_id as String to send an animation that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an animation from the Internet, or upload a new animation using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "duration",
            "description": "Duration of sent animation in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "width",
            "description": "Animation width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "height",
            "description": "Animation height",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb",
            "description": "Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "caption",
            "description": "Animation caption (may also be used when resending animation by \u003cem\u003efile_id\u003c/em\u003e), 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendVoice",
        "description": "\u003cp\u003eUse this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent as \u003ca href\u003d\"#audio\"\u003eAudio\u003c/a\u003e or \u003ca href\u003d\"#document\"\u003eDocument\u003c/a\u003e). On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "voice",
            "description": "Audio file to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "caption",
            "description": "Voice message caption, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "duration",
            "description": "Duration of the voice message in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendVideoNote",
        "description": "\u003cp\u003eAs of \u003ca href\u003d\"https://telegram.org/blog/video-messages-and-telescope\"\u003ev.4.0\u003c/a\u003e, Telegram clients support rounded square mp4 videos of up to 1 minute long. Use this method to send video messages. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "video_note",
            "description": "Video note to send. Pass a file_id as String to send a video note that exists on the Telegram servers (recommended) or upload a new video using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e. Sending video notes by a URL is currently unsupported",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "duration",
            "description": "Duration of sent video in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "length",
            "description": "Video width and height, i.e. diameter of the video message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb",
            "description": "Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail‘s width and height should not exceed 90. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can’t be reused and can be only uploaded as a new file, so you can pass “attach://\u0026lt;file_attach_name\u0026gt;” if the thumbnail was uploaded using multipart/form-data under \u0026lt;file_attach_name\u0026gt;. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendMediaGroup",
        "description": "\u003cp\u003eUse this method to send a group of photos or videos as an album. On success, an array of the sent \u003ca href\u003d\"#message\"\u003eMessages\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "media",
            "description": "A JSON-serialized array describing photos and videos to be sent, must include 2–10 items",
            "type": "List\u003cInputMediaPhoto and InputMediaVideo\u003e",
            "required": true
          },
          {
            "name": "disable_notification",
            "description": "Sends the messages \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the messages are a reply, ID of the original message",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "sendLocation",
        "description": "\u003cp\u003eUse this method to send point on the map. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "latitude",
            "description": "Latitude of the location",
            "type": "Float",
            "required": true
          },
          {
            "name": "longitude",
            "description": "Longitude of the location",
            "type": "Float",
            "required": true
          },
          {
            "name": "live_period",
            "description": "Period in seconds for which the location will be updated (see \u003ca href\u003d\"https://telegram.org/blog/live-locations\"\u003eLive Locations\u003c/a\u003e, should be between 60 and 86400.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "editMessageLiveLocation",
        "description": "\u003cp\u003eUse this method to edit live location messages sent by the bot or via the bot (for \u003ca href\u003d\"#inline-mode\"\u003einline bots\u003c/a\u003e). A location can be edited until its \u003cem\u003elive_period\u003c/em\u003e expires or editing is explicitly disabled by a call to \u003ca href\u003d\"#stopmessagelivelocation\"\u003estopMessageLiveLocation\u003c/a\u003e. On success, if the edited message was sent by the bot, the edited \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned, otherwise \u003cem\u003eTrue\u003c/em\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Identifier of the sent message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "Required if \u003cem\u003echat_id\u003c/em\u003e and \u003cem\u003emessage_id\u003c/em\u003e are not specified. Identifier of the inline message",
            "type": "String",
            "required": false
          },
          {
            "name": "latitude",
            "description": "Latitude of new location",
            "type": "Float",
            "required": true
          },
          {
            "name": "longitude",
            "description": "Longitude of new location",
            "type": "Float",
            "required": true
          },
          {
            "name": "reply_markup",
            "description": "A JSON-serialized object for a new \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e.",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "stopMessageLiveLocation",
        "description": "\u003cp\u003eUse this method to stop updating a live location message sent by the bot or via the bot (for \u003ca href\u003d\"#inline-mode\"\u003einline bots\u003c/a\u003e) before \u003cem\u003elive_period\u003c/em\u003e expires. On success, if the message was sent by the bot, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned, otherwise \u003cem\u003eTrue\u003c/em\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Identifier of the sent message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "Required if \u003cem\u003echat_id\u003c/em\u003e and \u003cem\u003emessage_id\u003c/em\u003e are not specified. Identifier of the inline message",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "A JSON-serialized object for a new \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e.",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "sendVenue",
        "description": "\u003cp\u003eUse this method to send information about a venue. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "latitude",
            "description": "Latitude of the venue",
            "type": "Float",
            "required": true
          },
          {
            "name": "longitude",
            "description": "Longitude of the venue",
            "type": "Float",
            "required": true
          },
          {
            "name": "title",
            "description": "Name of the venue",
            "type": "String",
            "required": true
          },
          {
            "name": "address",
            "description": "Address of the venue",
            "type": "String",
            "required": true
          },
          {
            "name": "foursquare_id",
            "description": "Foursquare identifier of the venue",
            "type": "String",
            "required": false
          },
          {
            "name": "foursquare_type",
            "description": "Foursquare type of the venue, if known. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)",
            "type": "String",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendContact",
        "description": "\u003cp\u003eUse this method to send phone contacts. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "phone_number",
            "description": "Contact\u0027s phone number",
            "type": "String",
            "required": true
          },
          {
            "name": "first_name",
            "description": "Contact\u0027s first name",
            "type": "String",
            "required": true
          },
          {
            "name": "last_name",
            "description": "Contact\u0027s last name",
            "type": "String",
            "required": false
          },
          {
            "name": "vcard",
            "description": "Additional data about the contact in the form of a \u003ca href\u003d\"https://en.wikipedia.org/wiki/VCard\"\u003evCard\u003c/a\u003e, 0-2048 bytes",
            "type": "String",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "sendChatAction",
        "description": "\u003cp\u003eUse this method when you need to tell the user that something is happening on the bot\u0027s side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eExample: The \u003ca href\u003d\"https://t.me/imagebot\"\u003eImageBot\u003c/a\u003e needs some time to process a request and upload the image. Instead of sending a text message along the lines of “Retrieving image, please wait…”, the bot may use \u003ca href\u003d\"#sendchataction\"\u003esendChatAction\u003c/a\u003e with \u003cem\u003eaction\u003c/em\u003e \u003d \u003cem\u003eupload_photo\u003c/em\u003e. The user will see a “sending photo” status for the bot.\u003c/p\u003e \n\u003c/blockquote\u003e\u003cp\u003eWe only recommend using this method when a response from the bot will take a \u003cstrong\u003enoticeable\u003c/strong\u003e amount of time to arrive.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "action",
            "description": "Type of action to broadcast. Choose one, depending on what the user is about to receive: \u003cem\u003etyping\u003c/em\u003e for \u003ca href\u003d\"#sendmessage\"\u003etext messages\u003c/a\u003e, \u003cem\u003eupload_photo\u003c/em\u003e for \u003ca href\u003d\"#sendphoto\"\u003ephotos\u003c/a\u003e, \u003cem\u003erecord_video\u003c/em\u003e or \u003cem\u003eupload_video\u003c/em\u003e for \u003ca href\u003d\"#sendvideo\"\u003evideos\u003c/a\u003e, \u003cem\u003erecord_audio\u003c/em\u003e or \u003cem\u003eupload_audio\u003c/em\u003e for \u003ca href\u003d\"#sendaudio\"\u003eaudio files\u003c/a\u003e, \u003cem\u003eupload_document\u003c/em\u003e for \u003ca href\u003d\"#senddocument\"\u003egeneral files\u003c/a\u003e, \u003cem\u003efind_location\u003c/em\u003e for \u003ca href\u003d\"#sendlocation\"\u003elocation data\u003c/a\u003e, \u003cem\u003erecord_video_note\u003c/em\u003e or \u003cem\u003eupload_video_note\u003c/em\u003e for \u003ca href\u003d\"#sendvideonote\"\u003evideo notes\u003c/a\u003e.",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "getUserProfilePhotos",
        "description": "\u003cp\u003eUse this method to get a list of profile pictures for a user. Returns a \u003ca href\u003d\"#userprofilephotos\"\u003eUserProfilePhotos\u003c/a\u003e object.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "user_id",
            "description": "Unique identifier of the target user",
            "type": "Integer",
            "required": true
          },
          {
            "name": "offset",
            "description": "Sequential number of the first photo to be returned. By default, all photos are returned.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "limit",
            "description": "Limits the number of photos to be retrieved. Values between 1—100 are accepted. Defaults to 100.",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "getFile",
        "description": "\u003cp\u003eUse this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a \u003ca href\u003d\"#file\"\u003eFile\u003c/a\u003e object is returned. The file can then be downloaded via the link \u003ccode\u003ehttps://api.telegram.org/file/bot\u0026lt;token\u0026gt;/\u0026lt;file_path\u0026gt;\u003c/code\u003e, where \u003ccode\u003e\u0026lt;file_path\u0026gt;\u003c/code\u003e is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling \u003ca href\u003d\"#getfile\"\u003egetFile\u003c/a\u003e again.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This function may not preserve the original file name and MIME type. You should save the file\u0027s MIME type and name (if available) when the File object is received. \u003c/p\u003e",
        "docParameters": [
          {
            "name": "file_id",
            "description": "File identifier to get info about",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "kickChatMember",
        "description": "\u003cp\u003eUse this method to kick a user from a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless \u003ca href\u003d\"#unbanchatmember\"\u003eunbanned\u003c/a\u003e first. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eNote: In regular groups (non-supergroups), this method will only work if the ‘All Members Are Admins’ setting is off in the target group. Otherwise members may only be removed by the group\u0027s creator or by the member that added them.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target group or username of the target supergroup or channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "user_id",
            "description": "Unique identifier of the target user",
            "type": "Integer",
            "required": true
          },
          {
            "name": "until_date",
            "description": "Date when the user will be unbanned, unix time. If user is banned for more than 366 days or less than 30 seconds from the current time they are considered to be banned forever",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "unbanChatMember",
        "description": "\u003cp\u003eUse this method to unban a previously kicked user in a supergroup or channel. The user will \u003cstrong\u003enot\u003c/strong\u003e return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. Returns \u003cem\u003eTrue\u003c/em\u003e on success. \u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target group or username of the target supergroup or channel (in the format \u003ccode\u003e@username\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "user_id",
            "description": "Unique identifier of the target user",
            "type": "Integer",
            "required": true
          }
        ]
      },
      {
        "name": "restrictChatMember",
        "description": "\u003cp\u003eUse this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate admin rights. Pass \u003cem\u003eTrue\u003c/em\u003e for all boolean parameters to lift restrictions from a user. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target supergroup (in the format \u003ccode\u003e@supergroupusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "user_id",
            "description": "Unique identifier of the target user",
            "type": "Integer",
            "required": true
          },
          {
            "name": "until_date",
            "description": "Date when restrictions will be lifted for the user, unix time. If user is restricted for more than 366 days or less than 30 seconds from the current time, they are considered to be restricted forever",
            "type": "Integer",
            "required": false
          },
          {
            "name": "can_send_messages",
            "description": "Pass True, if the user can send text messages, contacts, locations and venues",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_send_media_messages",
            "description": "Pass True, if the user can send audios, documents, photos, videos, video notes and voice notes, implies can_send_messages",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_send_other_messages",
            "description": "Pass True, if the user can send animations, games, stickers and use inline bots, implies can_send_media_messages",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_add_web_page_previews",
            "description": "Pass True, if the user may add web page previews to their messages, implies can_send_media_messages",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "promoteChatMember",
        "description": "\u003cp\u003eUse this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Pass \u003cem\u003eFalse\u003c/em\u003e for all boolean parameters to demote a user. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "user_id",
            "description": "Unique identifier of the target user",
            "type": "Integer",
            "required": true
          },
          {
            "name": "can_change_info",
            "description": "Pass True, if the administrator can change chat title, photo and other settings",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_post_messages",
            "description": "Pass True, if the administrator can create channel posts, channels only",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_edit_messages",
            "description": "Pass True, if the administrator can edit messages of other users and can pin messages, channels only",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_delete_messages",
            "description": "Pass True, if the administrator can delete messages of other users",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_invite_users",
            "description": "Pass True, if the administrator can invite new users to the chat",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_restrict_members",
            "description": "Pass True, if the administrator can restrict, ban or unban chat members",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_pin_messages",
            "description": "Pass True, if the administrator can pin messages, supergroups only",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "can_promote_members",
            "description": "Pass True, if the administrator can add new administrators with a subset of his own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by him)",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "exportChatInviteLink",
        "description": "\u003cp\u003eUse this method to generate a new invite link for a chat; any previously generated link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns the new invite link as \u003cem\u003eString\u003c/em\u003e on success.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eNote: Each administrator in a chat generates their own invite links. Bots can\u0027t use invite links generated by other administrators. If you want your bot to work with invite links, it will need to generate its own link using \u003ca href\u003d\"#exportchatinvitelink\"\u003eexportChatInviteLink\u003c/a\u003e – after this the link will become available to the bot via the \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e method. If your bot needs to generate a new invite link replacing its previous one, use \u003ca href\u003d\"#exportchatinvitelink\"\u003eexportChatInviteLink\u003c/a\u003e again.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          }
        ]
      },
      {
        "name": "setChatPhoto",
        "description": "\u003cp\u003eUse this method to set a new profile photo for the chat. Photos can\u0027t be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns \u003cem\u003eTrue\u003c/em\u003e on success. \u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eNote: In regular groups (non-supergroups), this method will only work if the ‘All Members Are Admins’ setting is off in the target group.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "photo",
            "description": "New chat photo, uploaded using multipart/form-data",
            "type": "InputFile",
            "required": true
          }
        ]
      },
      {
        "name": "deleteChatPhoto",
        "description": "\u003cp\u003eUse this method to delete a chat photo. Photos can\u0027t be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns \u003cem\u003eTrue\u003c/em\u003e on success. \u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eNote: In regular groups (non-supergroups), this method will only work if the ‘All Members Are Admins’ setting is off in the target group.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          }
        ]
      },
      {
        "name": "setChatTitle",
        "description": "\u003cp\u003eUse this method to change the title of a chat. Titles can\u0027t be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns \u003cem\u003eTrue\u003c/em\u003e on success. \u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eNote: In regular groups (non-supergroups), this method will only work if the ‘All Members Are Admins’ setting is off in the target group.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "title",
            "description": "New chat title, 1-255 characters",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "setChatDescription",
        "description": "\u003cp\u003eUse this method to change the description of a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns \u003cem\u003eTrue\u003c/em\u003e on success. \u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "description",
            "description": "New chat description, 0-255 characters",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "pinChatMessage",
        "description": "\u003cp\u003eUse this method to pin a message in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the ‘can_pin_messages’ admin right in the supergroup or ‘can_edit_messages’ admin right in the channel. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "message_id",
            "description": "Identifier of a message to pin",
            "type": "Integer",
            "required": true
          },
          {
            "name": "disable_notification",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if it is not necessary to send a notification to all chat members about the new pinned message. Notifications are always disabled in channels.",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "unpinChatMessage",
        "description": "\u003cp\u003eUse this method to unpin a message in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the ‘can_pin_messages’ admin right in the supergroup or ‘can_edit_messages’ admin right in the channel. Returns \u003cem\u003eTrue\u003c/em\u003e on success. \u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          }
        ]
      },
      {
        "name": "leaveChat",
        "description": "\u003cp\u003eUse this method for your bot to leave a group, supergroup or channel. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          }
        ]
      },
      {
        "name": "getChat",
        "description": "\u003cp\u003eUse this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a \u003ca href\u003d\"#chat\"\u003eChat\u003c/a\u003e object on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          }
        ]
      },
      {
        "name": "getChatAdministrators",
        "description": "\u003cp\u003eUse this method to get a list of administrators in a chat. On success, returns an Array of \u003ca href\u003d\"#chatmember\"\u003eChatMember\u003c/a\u003e objects that contains information about all chat administrators except other bots. If the chat is a group or a supergroup and no administrators were appointed, only the creator will be returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          }
        ]
      },
      {
        "name": "getChatMembersCount",
        "description": "\u003cp\u003eUse this method to get the number of members in a chat. Returns \u003cem\u003eInt\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          }
        ]
      },
      {
        "name": "getChatMember",
        "description": "\u003cp\u003eUse this method to get information about a member of a chat. Returns a \u003ca href\u003d\"#chatmember\"\u003eChatMember\u003c/a\u003e object on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "user_id",
            "description": "Unique identifier of the target user",
            "type": "Integer",
            "required": true
          }
        ]
      },
      {
        "name": "setChatStickerSet",
        "description": "\u003cp\u003eUse this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field \u003cem\u003ecan_set_sticker_set\u003c/em\u003e optionally returned in \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e requests to check if the bot can use this method. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target supergroup (in the format \u003ccode\u003e@supergroupusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "sticker_set_name",
            "description": "Name of the sticker set to be set as the group sticker set",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "deleteChatStickerSet",
        "description": "\u003cp\u003eUse this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field \u003cem\u003ecan_set_sticker_set\u003c/em\u003e optionally returned in \u003ca href\u003d\"#getchat\"\u003egetChat\u003c/a\u003e requests to check if the bot can use this method. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target supergroup (in the format \u003ccode\u003e@supergroupusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          }
        ]
      },
      {
        "name": "answerCallbackQuery",
        "description": "\u003cp\u003eUse this method to send answers to callback queries sent from \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboards\u003c/a\u003e. The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, \u003cem\u003eTrue\u003c/em\u003e is returned.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eAlternatively, the user can be redirected to the specified Game URL. For this option to work, you must first create a game for your bot via \u003ca href\u003d\"https://t.me/botfather\"\u003e@Botfather\u003c/a\u003e and accept the terms. Otherwise, you may use links like \u003ccode\u003et.me/your_bot?start\u003dXXXX\u003c/code\u003e that open your bot with a parameter.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "callback_query_id",
            "description": "Unique identifier for the query to be answered",
            "type": "String",
            "required": true
          },
          {
            "name": "text",
            "description": "Text of the notification. If not specified, nothing will be shown to the user, 0-200 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "show_alert",
            "description": "If \u003cem\u003etrue\u003c/em\u003e, an alert will be shown by the client instead of a notification at the top of the chat screen. Defaults to \u003cem\u003efalse\u003c/em\u003e.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "url",
            "description": "URL that will be opened by the user\u0027s client. If you have created a \u003ca href\u003d\"#game\"\u003eGame\u003c/a\u003e and accepted the conditions via \u003ca href\u003d\"https://t.me/botfather\"\u003e@Botfather\u003c/a\u003e, specify the URL that opens your game – note that this will only work if the query comes from a \u003ca href\u003d\"#inlinekeyboardbutton\"\u003e\u003cem\u003ecallback_game\u003c/em\u003e\u003c/a\u003e button.\u003cbr\u003e\u003cbr\u003eOtherwise, you may use links like \u003ccode\u003et.me/your_bot?start\u003dXXXX\u003c/code\u003e that open your bot with a parameter.",
            "type": "String",
            "required": false
          },
          {
            "name": "cache_time",
            "description": "The maximum amount of time in seconds that the result of the callback query may be cached client-side. Telegram apps will support caching starting in version 3.14. Defaults to 0.",
            "type": "Integer",
            "required": false
          }
        ]
      }
    ]
  },
  {
    "name": "Updating messages",
    "description": "\u003cp\u003eThe following methods allow you to change an existing message in the message history instead of sending a new one with a result of an action. This is most useful for messages with \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboards\u003c/a\u003e using callback queries, but can also help reduce clutter in conversations with regular chat bots.\u003c/p\u003e\n\u003cp\u003ePlease note, that it is currently only possible to edit messages without \u003cem\u003ereply_markup\u003c/em\u003e or with \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboards\u003c/a\u003e.\u003c/p\u003e",
    "docTypes": [],
    "docMethods": [
      {
        "name": "editMessageText",
        "description": "\u003cp\u003eUse this method to edit text and \u003ca href\u003d\"#games\"\u003egame\u003c/a\u003e messages sent by the bot or via the bot (for \u003ca href\u003d\"#inline-mode\"\u003einline bots\u003c/a\u003e). On success, if edited message is sent by the bot, the edited \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned, otherwise \u003cem\u003eTrue\u003c/em\u003e is returned. \u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Identifier of the sent message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "Required if \u003cem\u003echat_id\u003c/em\u003e and \u003cem\u003emessage_id\u003c/em\u003e are not specified. Identifier of the inline message",
            "type": "String",
            "required": false
          },
          {
            "name": "text",
            "description": "New text of the message",
            "type": "String",
            "required": true
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in your bot\u0027s message.",
            "type": "String",
            "required": false
          },
          {
            "name": "disable_web_page_preview",
            "description": "Disables link previews for links in this message",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e.",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "editMessageCaption",
        "description": "\u003cp\u003eUse this method to edit captions of messages sent by the bot or via the bot (for \u003ca href\u003d\"#inline-mode\"\u003einline bots\u003c/a\u003e). On success, if edited message is sent by the bot, the edited \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned, otherwise \u003cem\u003eTrue\u003c/em\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Identifier of the sent message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "Required if \u003cem\u003echat_id\u003c/em\u003e and \u003cem\u003emessage_id\u003c/em\u003e are not specified. Identifier of the inline message",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "New caption of the message",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e.",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "editMessageMedia",
        "description": "\u003cp\u003eUse this method to edit animation, audio, document, photo, or video messages. If a message is a part of a message album, then it can be edited only to a photo or a video. Otherwise, message type can be changed arbitrarily. When inline message is edited, new file can\u0027t be uploaded. Use previously uploaded file via its file_id or specify a URL. On success, if the edited message was sent by the bot, the edited \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned, otherwise \u003cem\u003eTrue\u003c/em\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Identifier of the sent message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "Required if \u003cem\u003echat_id\u003c/em\u003e and \u003cem\u003emessage_id\u003c/em\u003e are not specified. Identifier of the inline message",
            "type": "String",
            "required": false
          },
          {
            "name": "media",
            "description": "A JSON-serialized object for a new media content of the message",
            "type": "InputMedia",
            "required": true
          },
          {
            "name": "reply_markup",
            "description": "A JSON-serialized object for a new \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e.",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "editMessageReplyMarkup",
        "description": "\u003cp\u003eUse this method to edit only the reply markup of messages sent by the bot or via the bot (for \u003ca href\u003d\"#inline-mode\"\u003einline bots\u003c/a\u003e). On success, if edited message is sent by the bot, the edited \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned, otherwise \u003cem\u003eTrue\u003c/em\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Identifier of the sent message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "Required if \u003cem\u003echat_id\u003c/em\u003e and \u003cem\u003emessage_id\u003c/em\u003e are not specified. Identifier of the inline message",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e.",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "deleteMessage",
        "description": "\u003cp\u003eUse this method to delete a message, including service messages, with the following limitations:\u003cbr\u003e- A message can only be deleted if it was sent less than 48 hours ago.\u003cbr\u003e- Bots can delete outgoing messages in private chats, groups, and supergroups.\u003cbr\u003e- Bots granted \u003cem\u003ecan_post_messages\u003c/em\u003e permissions can delete outgoing messages in channels.\u003cbr\u003e- If the bot is an administrator of a group, it can delete any message there.\u003cbr\u003e- If the bot has \u003cem\u003ecan_delete_messages\u003c/em\u003e permission in a supergroup or a channel, it can delete any message there.\u003cbr\u003eReturns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "message_id",
            "description": "Identifier of the message to delete",
            "type": "Integer",
            "required": true
          }
        ]
      }
    ]
  },
  {
    "name": "Stickers",
    "description": "\u003cp\u003eThe following methods and objects allow your bot to handle stickers and sticker sets.\u003c/p\u003e",
    "docTypes": [
      {
        "name": "Sticker",
        "description": "\u003cp\u003eThis object represents a sticker.\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique identifier for this file",
            "type": "String",
            "required": true
          },
          {
            "name": "width",
            "description": "Sticker width",
            "type": "Integer",
            "required": true
          },
          {
            "name": "height",
            "description": "Sticker height",
            "type": "Integer",
            "required": true
          },
          {
            "name": "thumb",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Sticker thumbnail in the .webp or .jpg format",
            "type": "PhotoSize",
            "required": false
          },
          {
            "name": "emoji",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Emoji associated with the sticker",
            "type": "String",
            "required": false
          },
          {
            "name": "set_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Name of the sticker set to which the sticker belongs",
            "type": "String",
            "required": false
          },
          {
            "name": "mask_position",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. For mask stickers, the position where the mask should be placed",
            "type": "MaskPosition",
            "required": false
          },
          {
            "name": "file_size",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. File size",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "StickerSet",
        "description": "\u003cp\u003eThis object represents a sticker set.\u003c/p\u003e",
        "docFields": [
          {
            "name": "name",
            "description": "Sticker set name",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Sticker set title",
            "type": "String",
            "required": true
          },
          {
            "name": "contains_masks",
            "description": "\u003cem\u003eTrue\u003c/em\u003e, if the sticker set contains masks",
            "type": "Boolean",
            "required": true
          },
          {
            "name": "stickers",
            "description": "List of all set stickers",
            "type": "List\u003cSticker\u003e",
            "required": true
          }
        ]
      },
      {
        "name": "MaskPosition",
        "description": "\u003cp\u003eThis object describes the position on faces where a mask should be placed by default.\u003c/p\u003e",
        "docFields": [
          {
            "name": "point",
            "description": "The part of the face relative to which the mask should be placed. One of “forehead”, “eyes”, “mouth”, or “chin”.",
            "type": "String",
            "required": true
          },
          {
            "name": "x_shift",
            "description": "Shift by X-axis measured in widths of the mask scaled to the face size, from left to right. For example, choosing -1.0 will place mask just to the left of the default mask position.",
            "type": "Float",
            "required": true
          },
          {
            "name": "y_shift",
            "description": "Shift by Y-axis measured in heights of the mask scaled to the face size, from top to bottom. For example, 1.0 will place the mask just below the default mask position.",
            "type": "Float",
            "required": true
          },
          {
            "name": "scale",
            "description": "Mask scaling coefficient. For example, 2.0 means double size.",
            "type": "Float",
            "required": true
          }
        ]
      }
    ],
    "docMethods": [
      {
        "name": "sendSticker",
        "description": "\u003cp\u003eUse this method to send .webp stickers. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat or username of the target channel (in the format \u003ccode\u003e@channelusername\u003c/code\u003e)",
            "type": "Integer or String",
            "required": true
          },
          {
            "name": "sticker",
            "description": "Sticker to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a .webp file from the Internet, or upload a new one using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "Additional interface options. A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e, \u003ca href\u003d\"https://core.telegram.org/bots#keyboards\"\u003ecustom reply keyboard\u003c/a\u003e, instructions to remove reply keyboard or to force a reply from the user.",
            "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
            "required": false
          }
        ]
      },
      {
        "name": "getStickerSet",
        "description": "\u003cp\u003eUse this method to get a sticker set. On success, a \u003ca href\u003d\"#stickerset\"\u003eStickerSet\u003c/a\u003e object is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "name",
            "description": "Name of the sticker set",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "uploadStickerFile",
        "description": "\u003cp\u003eUse this method to upload a .png file with a sticker for later use in \u003cem\u003ecreateNewStickerSet\u003c/em\u003e and \u003cem\u003eaddStickerToSet\u003c/em\u003e methods (can be used multiple times). Returns the uploaded \u003ca href\u003d\"#file\"\u003eFile\u003c/a\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "user_id",
            "description": "User identifier of sticker file owner",
            "type": "Integer",
            "required": true
          },
          {
            "name": "png_sticker",
            "description": "\u003cstrong\u003ePng\u003c/strong\u003e image with the sticker, must be up to 512 kilobytes in size, dimensions must not exceed 512px, and either width or height must be exactly 512px. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile",
            "required": true
          }
        ]
      },
      {
        "name": "createNewStickerSet",
        "description": "\u003cp\u003eUse this method to create new sticker set owned by a user. The bot will be able to edit the created sticker set. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "user_id",
            "description": "User identifier of created sticker set owner",
            "type": "Integer",
            "required": true
          },
          {
            "name": "name",
            "description": "Short name of sticker set, to be used in \u003ccode\u003et.me/addstickers/\u003c/code\u003e URLs (e.g., \u003cem\u003eanimals\u003c/em\u003e). Can contain only english letters, digits and underscores. Must begin with a letter, can\u0027t contain consecutive underscores and must end in \u003cem\u003e“_by_\u0026lt;bot username\u0026gt;”\u003c/em\u003e. \u003cem\u003e\u0026lt;bot_username\u0026gt;\u003c/em\u003e is case insensitive. 1-64 characters.",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Sticker set title, 1-64 characters",
            "type": "String",
            "required": true
          },
          {
            "name": "png_sticker",
            "description": "\u003cstrong\u003ePng\u003c/strong\u003e image with the sticker, must be up to 512 kilobytes in size, dimensions must not exceed 512px, and either width or height must be exactly 512px. Pass a \u003cem\u003efile_id\u003c/em\u003e as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "emojis",
            "description": "One or more emoji corresponding to the sticker",
            "type": "String",
            "required": true
          },
          {
            "name": "contains_masks",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if a set of mask stickers should be created",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "mask_position",
            "description": "A JSON-serialized object for position where the mask should be placed on faces",
            "type": "MaskPosition",
            "required": false
          }
        ]
      },
      {
        "name": "addStickerToSet",
        "description": "\u003cp\u003eUse this method to add a new sticker to a set created by the bot. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "user_id",
            "description": "User identifier of sticker set owner",
            "type": "Integer",
            "required": true
          },
          {
            "name": "name",
            "description": "Sticker set name",
            "type": "String",
            "required": true
          },
          {
            "name": "png_sticker",
            "description": "\u003cstrong\u003ePng\u003c/strong\u003e image with the sticker, must be up to 512 kilobytes in size, dimensions must not exceed 512px, and either width or height must be exactly 512px. Pass a \u003cem\u003efile_id\u003c/em\u003e as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. \u003ca href\u003d\"#sending-files\"\u003eMore info on Sending Files »\u003c/a\u003e",
            "type": "InputFile or String",
            "required": true
          },
          {
            "name": "emojis",
            "description": "One or more emoji corresponding to the sticker",
            "type": "String",
            "required": true
          },
          {
            "name": "mask_position",
            "description": "A JSON-serialized object for position where the mask should be placed on faces",
            "type": "MaskPosition",
            "required": false
          }
        ]
      },
      {
        "name": "setStickerPositionInSet",
        "description": "\u003cp\u003eUse this method to move a sticker in a set created by the bot to a specific position . Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "sticker",
            "description": "File identifier of the sticker",
            "type": "String",
            "required": true
          },
          {
            "name": "position",
            "description": "New sticker position in the set, zero-based",
            "type": "Integer",
            "required": true
          }
        ]
      },
      {
        "name": "deleteStickerFromSet",
        "description": "\u003cp\u003eUse this method to delete a sticker from a set created by the bot. Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "sticker",
            "description": "File identifier of the sticker",
            "type": "String",
            "required": true
          }
        ]
      }
    ]
  },
  {
    "name": "Inline mode",
    "description": "\u003cp\u003eThe following methods and objects allow your bot to work in \u003ca href\u003d\"/bots/inline\"\u003einline mode\u003c/a\u003e.\u003cbr\u003ePlease see our \u003ca href\u003d\"/bots/inline\"\u003eIntroduction to Inline bots\u003c/a\u003e for more details.\u003c/p\u003e\n\u003cp\u003eTo enable this option, send the \u003ccode\u003e/setinline\u003c/code\u003e command to \u003ca href\u003d\"https://t.me/botfather\"\u003e@BotFather\u003c/a\u003e and provide the placeholder text that the user will see in the input field after typing your bot’s name.\u003c/p\u003e",
    "docTypes": [
      {
        "name": "InlineQuery",
        "description": "\u003cp\u003eThis object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.\u003c/p\u003e",
        "docFields": [
          {
            "name": "id",
            "description": "Unique identifier for this query",
            "type": "String",
            "required": true
          },
          {
            "name": "from",
            "description": "Sender",
            "type": "User",
            "required": true
          },
          {
            "name": "location",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Sender location, only for bots that request user location",
            "type": "Location",
            "required": false
          },
          {
            "name": "query",
            "description": "Text of the query (up to 512 characters)",
            "type": "String",
            "required": true
          },
          {
            "name": "offset",
            "description": "Offset of the results to be returned, can be controlled by the bot",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "InlineQueryResultArticle",
        "description": "\u003cp\u003eRepresents a link to an article or web page.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003earticle\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 Bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Title of the result",
            "type": "String",
            "required": true
          },
          {
            "name": "input_message_content",
            "description": "Content of the message to be sent",
            "type": "InputMessageContent",
            "required": true
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. URL of the result",
            "type": "String",
            "required": false
          },
          {
            "name": "hide_url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Pass \u003cem\u003eTrue\u003c/em\u003e, if you don\u0027t want the URL to be shown in the message",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "description",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Short description of the result",
            "type": "String",
            "required": false
          },
          {
            "name": "thumb_url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Url of the thumbnail for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "thumb_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail height",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultPhoto",
        "description": "\u003cp\u003eRepresents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the photo.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003ephoto\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "photo_url",
            "description": "A valid URL of the photo. Photo must be in \u003cstrong\u003ejpeg\u003c/strong\u003e format. Photo size must not exceed 5MB",
            "type": "String",
            "required": true
          },
          {
            "name": "thumb_url",
            "description": "URL of the thumbnail for the photo",
            "type": "String",
            "required": true
          },
          {
            "name": "photo_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Width of the photo",
            "type": "Integer",
            "required": false
          },
          {
            "name": "photo_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Height of the photo",
            "type": "Integer",
            "required": false
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "description",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Short description of the result",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the photo to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the photo",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultGif",
        "description": "\u003cp\u003eRepresents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the animation.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003egif\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "gif_url",
            "description": "A valid URL for the GIF file. File size must not exceed 1MB",
            "type": "String",
            "required": true
          },
          {
            "name": "gif_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Width of the GIF",
            "type": "Integer",
            "required": false
          },
          {
            "name": "gif_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Height of the GIF",
            "type": "Integer",
            "required": false
          },
          {
            "name": "gif_duration",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Duration of the GIF",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb_url",
            "description": "URL of the static thumbnail for the result (jpeg or gif)",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the GIF file to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the GIF animation",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultMpeg4Gif",
        "description": "\u003cp\u003eRepresents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the animation.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003empeg4_gif\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "mpeg4_url",
            "description": "A valid URL for the MP4 file. File size must not exceed 1MB",
            "type": "String",
            "required": true
          },
          {
            "name": "mpeg4_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "mpeg4_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video height",
            "type": "Integer",
            "required": false
          },
          {
            "name": "mpeg4_duration",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video duration",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb_url",
            "description": "URL of the static thumbnail (jpeg or gif) for the result",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the MPEG-4 file to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the video animation",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultVideo",
        "description": "\u003cp\u003eRepresents a link to a page containing an embedded video player or a video file. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the video.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eIf an InlineQueryResultVideo message contains an embedded video (e.g., YouTube), you \u003cstrong\u003emust\u003c/strong\u003e replace its content using \u003cem\u003einput_message_content\u003c/em\u003e.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003evideo\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "video_url",
            "description": "A valid URL for the embedded video player or video file",
            "type": "String",
            "required": true
          },
          {
            "name": "mime_type",
            "description": "Mime type of the content of video url, “text/html” or “video/mp4”",
            "type": "String",
            "required": true
          },
          {
            "name": "thumb_url",
            "description": "URL of the thumbnail (jpeg only) for the video",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Title for the result",
            "type": "String",
            "required": true
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the video to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "video_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "video_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video height",
            "type": "Integer",
            "required": false
          },
          {
            "name": "video_duration",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Video duration in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "description",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Short description of the result",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the video. This field is \u003cstrong\u003erequired\u003c/strong\u003e if InlineQueryResultVideo is used to send an HTML-page as a result (e.g., a YouTube video).",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultAudio",
        "description": "\u003cp\u003eRepresents a link to an mp3 audio file. By default, this audio file will be sent by the user. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the audio.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003eaudio\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "audio_url",
            "description": "A valid URL for the audio file",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Title",
            "type": "String",
            "required": true
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "performer",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Performer",
            "type": "String",
            "required": false
          },
          {
            "name": "audio_duration",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Audio duration in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the audio",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultVoice",
        "description": "\u003cp\u003eRepresents a link to a voice recording in an .ogg container encoded with OPUS. By default, this voice recording will be sent by the user. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the the voice message.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003evoice\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "voice_url",
            "description": "A valid URL for the voice recording",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Recording title",
            "type": "String",
            "required": true
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "voice_duration",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Recording duration in seconds",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the voice recording",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultDocument",
        "description": "\u003cp\u003eRepresents a link to a file. By default, this file will be sent by the user with an optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the file. Currently, only \u003cstrong\u003e.PDF\u003c/strong\u003e and \u003cstrong\u003e.ZIP\u003c/strong\u003e files can be sent using this method.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003edocument\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Title for the result",
            "type": "String",
            "required": true
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the document to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "document_url",
            "description": "A valid URL for the file",
            "type": "String",
            "required": true
          },
          {
            "name": "mime_type",
            "description": "Mime type of the content of the file, either “application/pdf” or “application/zip”",
            "type": "String",
            "required": true
          },
          {
            "name": "description",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Short description of the result",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Inline keyboard attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the file",
            "type": "InputMessageContent",
            "required": false
          },
          {
            "name": "thumb_url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. URL of the thumbnail (jpeg only) for the file",
            "type": "String",
            "required": false
          },
          {
            "name": "thumb_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail height",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultLocation",
        "description": "\u003cp\u003eRepresents a location on a map. By default, the location will be sent by the user. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the location.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003elocation\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 Bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "latitude",
            "description": "Location latitude in degrees",
            "type": "Float",
            "required": true
          },
          {
            "name": "longitude",
            "description": "Location longitude in degrees",
            "type": "Float",
            "required": true
          },
          {
            "name": "title",
            "description": "Location title",
            "type": "String",
            "required": true
          },
          {
            "name": "live_period",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Period in seconds for which the location can be updated, should be between 60 and 86400.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the location",
            "type": "InputMessageContent",
            "required": false
          },
          {
            "name": "thumb_url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Url of the thumbnail for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "thumb_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail height",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultVenue",
        "description": "\u003cp\u003eRepresents a venue. By default, the venue will be sent by the user. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the venue.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003evenue\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 Bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "latitude",
            "description": "Latitude of the venue location in degrees",
            "type": "Float",
            "required": true
          },
          {
            "name": "longitude",
            "description": "Longitude of the venue location in degrees",
            "type": "Float",
            "required": true
          },
          {
            "name": "title",
            "description": "Title of the venue",
            "type": "String",
            "required": true
          },
          {
            "name": "address",
            "description": "Address of the venue",
            "type": "String",
            "required": true
          },
          {
            "name": "foursquare_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Foursquare identifier of the venue if known",
            "type": "String",
            "required": false
          },
          {
            "name": "foursquare_type",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Foursquare type of the venue, if known. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the venue",
            "type": "InputMessageContent",
            "required": false
          },
          {
            "name": "thumb_url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Url of the thumbnail for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "thumb_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail height",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultContact",
        "description": "\u003cp\u003eRepresents a contact with a phone number. By default, this contact will be sent by the user. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the contact.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003econtact\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 Bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "phone_number",
            "description": "Contact\u0027s phone number",
            "type": "String",
            "required": true
          },
          {
            "name": "first_name",
            "description": "Contact\u0027s first name",
            "type": "String",
            "required": true
          },
          {
            "name": "last_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Contact\u0027s last name",
            "type": "String",
            "required": false
          },
          {
            "name": "vcard",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Additional data about the contact in the form of a \u003ca href\u003d\"https://en.wikipedia.org/wiki/VCard\"\u003evCard\u003c/a\u003e, 0-2048 bytes",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the contact",
            "type": "InputMessageContent",
            "required": false
          },
          {
            "name": "thumb_url",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Url of the thumbnail for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "thumb_width",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "thumb_height",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Thumbnail height",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultGame",
        "description": "\u003cp\u003eRepresents a \u003ca href\u003d\"#games\"\u003eGame\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after October 1, 2016. Older clients will not display any inline results if a game result is among them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003egame\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "game_short_name",
            "description": "Short name of the game",
            "type": "String",
            "required": true
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultCachedPhoto",
        "description": "\u003cp\u003eRepresents a link to a photo stored on the Telegram servers. By default, this photo will be sent by the user with an optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the photo.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003ephoto\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "photo_file_id",
            "description": "A valid file identifier of the photo",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "description",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Short description of the result",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the photo to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the photo",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultCachedGif",
        "description": "\u003cp\u003eRepresents a link to an animated GIF file stored on the Telegram servers. By default, this animated GIF file will be sent by the user with an optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with specified content instead of the animation.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003egif\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "gif_file_id",
            "description": "A valid file identifier for the GIF file",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the GIF file to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the GIF animation",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultCachedMpeg4Gif",
        "description": "\u003cp\u003eRepresents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the animation.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003empeg4_gif\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "mpeg4_file_id",
            "description": "A valid file identifier for the MP4 file",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Title for the result",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the MPEG-4 file to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the video animation",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultCachedSticker",
        "description": "\u003cp\u003eRepresents a link to a sticker stored on the Telegram servers. By default, this sticker will be sent by the user. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the sticker.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003esticker\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "sticker_file_id",
            "description": "A valid file identifier of the sticker",
            "type": "String",
            "required": true
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the sticker",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultCachedDocument",
        "description": "\u003cp\u003eRepresents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the file.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003edocument\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Title for the result",
            "type": "String",
            "required": true
          },
          {
            "name": "document_file_id",
            "description": "A valid file identifier for the file",
            "type": "String",
            "required": true
          },
          {
            "name": "description",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Short description of the result",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the document to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the file",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultCachedVideo",
        "description": "\u003cp\u003eRepresents a link to a video file stored on the Telegram servers. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the video.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003evideo\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "video_file_id",
            "description": "A valid file identifier for the video file",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Title for the result",
            "type": "String",
            "required": true
          },
          {
            "name": "description",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Short description of the result",
            "type": "String",
            "required": false
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption of the video to be sent, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the video",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultCachedVoice",
        "description": "\u003cp\u003eRepresents a link to a voice message stored on the Telegram servers. By default, this voice message will be sent by the user. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the voice message.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003evoice\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "voice_file_id",
            "description": "A valid file identifier for the voice message",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Voice message title",
            "type": "String",
            "required": true
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the voice message",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InlineQueryResultCachedAudio",
        "description": "\u003cp\u003eRepresents a link to an mp3 audio file stored on the Telegram servers. By default, this audio file will be sent by the user. Alternatively, you can use \u003cem\u003einput_message_content\u003c/em\u003e to send a message with the specified content instead of the audio.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Type of the result, must be \u003cem\u003eaudio\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "id",
            "description": "Unique identifier for this result, 1-64 bytes",
            "type": "String",
            "required": true
          },
          {
            "name": "audio_file_id",
            "description": "A valid file identifier for the audio file",
            "type": "String",
            "required": true
          },
          {
            "name": "caption",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Caption, 0-1024 characters",
            "type": "String",
            "required": false
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in the media caption.",
            "type": "String",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. \u003ca href\u003d\"/bots#inline-keyboards-and-on-the-fly-updating\"\u003eInline keyboard\u003c/a\u003e attached to the message",
            "type": "InlineKeyboardMarkup",
            "required": false
          },
          {
            "name": "input_message_content",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Content of the message to be sent instead of the audio",
            "type": "InputMessageContent",
            "required": false
          }
        ]
      },
      {
        "name": "InputTextMessageContent",
        "description": "\u003cp\u003eRepresents the \u003ca href\u003d\"#inputmessagecontent\"\u003econtent\u003c/a\u003e of a text message to be sent as the result of an inline query. \u003c/p\u003e",
        "docFields": [
          {
            "name": "message_text",
            "description": "Text of the message to be sent, 1-4096 characters",
            "type": "String",
            "required": true
          },
          {
            "name": "parse_mode",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Send \u003ca href\u003d\"#markdown-style\"\u003e\u003cem\u003eMarkdown\u003c/em\u003e\u003c/a\u003e or \u003ca href\u003d\"#html-style\"\u003e\u003cem\u003eHTML\u003c/em\u003e\u003c/a\u003e, if you want Telegram apps to show \u003ca href\u003d\"#formatting-options\"\u003ebold, italic, fixed-width text or inline URLs\u003c/a\u003e in your bot\u0027s message.",
            "type": "String",
            "required": false
          },
          {
            "name": "disable_web_page_preview",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Disables link previews for links in the sent message",
            "type": "Boolean",
            "required": false
          }
        ]
      },
      {
        "name": "InputLocationMessageContent",
        "description": "\u003cp\u003eRepresents the \u003ca href\u003d\"#inputmessagecontent\"\u003econtent\u003c/a\u003e of a location message to be sent as the result of an inline query. \u003c/p\u003e",
        "docFields": [
          {
            "name": "latitude",
            "description": "Latitude of the location in degrees",
            "type": "Float",
            "required": true
          },
          {
            "name": "longitude",
            "description": "Longitude of the location in degrees",
            "type": "Float",
            "required": true
          },
          {
            "name": "live_period",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Period in seconds for which the location can be updated, should be between 60 and 86400.",
            "type": "Integer",
            "required": false
          }
        ]
      },
      {
        "name": "InputVenueMessageContent",
        "description": "\u003cp\u003eRepresents the \u003ca href\u003d\"#inputmessagecontent\"\u003econtent\u003c/a\u003e of a venue message to be sent as the result of an inline query. \u003c/p\u003e",
        "docFields": [
          {
            "name": "latitude",
            "description": "Latitude of the venue in degrees",
            "type": "Float",
            "required": true
          },
          {
            "name": "longitude",
            "description": "Longitude of the venue in degrees",
            "type": "Float",
            "required": true
          },
          {
            "name": "title",
            "description": "Name of the venue",
            "type": "String",
            "required": true
          },
          {
            "name": "address",
            "description": "Address of the venue",
            "type": "String",
            "required": true
          },
          {
            "name": "foursquare_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Foursquare identifier of the venue, if known",
            "type": "String",
            "required": false
          },
          {
            "name": "foursquare_type",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Foursquare type of the venue, if known. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "InputContactMessageContent",
        "description": "\u003cp\u003eRepresents the \u003ca href\u003d\"#inputmessagecontent\"\u003econtent\u003c/a\u003e of a contact message to be sent as the result of an inline query. \u003c/p\u003e",
        "docFields": [
          {
            "name": "phone_number",
            "description": "Contact\u0027s phone number",
            "type": "String",
            "required": true
          },
          {
            "name": "first_name",
            "description": "Contact\u0027s first name",
            "type": "String",
            "required": true
          },
          {
            "name": "last_name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Contact\u0027s last name",
            "type": "String",
            "required": false
          },
          {
            "name": "vcard",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Additional data about the contact in the form of a \u003ca href\u003d\"https://en.wikipedia.org/wiki/VCard\"\u003evCard\u003c/a\u003e, 0-2048 bytes",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "ChosenInlineResult",
        "description": "\u003cp\u003eRepresents a \u003ca href\u003d\"#inlinequeryresult\"\u003eresult\u003c/a\u003e of an inline query that was chosen by the user and sent to their chat partner. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e It is necessary to enable \u003ca href\u003d\"/bots/inline#collecting-feedback\"\u003einline feedback\u003c/a\u003e via \u003ca href\u003d\"https://t.me/botfather\"\u003e@Botfather\u003c/a\u003e in order to receive these objects in updates.\u003c/p\u003e",
        "docFields": [
          {
            "name": "result_id",
            "description": "The unique identifier for the result that was chosen",
            "type": "String",
            "required": true
          },
          {
            "name": "from",
            "description": "The user that chose the result",
            "type": "User",
            "required": true
          },
          {
            "name": "location",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Sender location, only for bots that require user location",
            "type": "Location",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Identifier of the sent inline message. Available only if there is an \u003ca href\u003d\"#inlinekeyboardmarkup\"\u003einline keyboard\u003c/a\u003e attached to the message. Will be also received in \u003ca href\u003d\"#callbackquery\"\u003ecallback queries\u003c/a\u003e and can be used to \u003ca href\u003d\"#updating-messages\"\u003eedit\u003c/a\u003e the message.",
            "type": "String",
            "required": false
          },
          {
            "name": "query",
            "description": "The query that was used to obtain the result",
            "type": "String",
            "required": true
          }
        ]
      }
    ],
    "docMethods": [
      {
        "name": "answerInlineQuery",
        "description": "\u003cp\u003eUse this method to send answers to an inline query. On success, \u003cem\u003eTrue\u003c/em\u003e is returned.\u003cbr\u003eNo more than \u003cstrong\u003e50\u003c/strong\u003e results per query are allowed.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "inline_query_id",
            "description": "Unique identifier for the answered query",
            "type": "String",
            "required": true
          },
          {
            "name": "results",
            "description": "A JSON-serialized array of results for the inline query",
            "type": "List\u003cInlineQueryResult\u003e",
            "required": true
          },
          {
            "name": "cache_time",
            "description": "The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300.",
            "type": "Integer",
            "required": false
          },
          {
            "name": "is_personal",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "next_offset",
            "description": "Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don‘t support pagination. Offset length can’t exceed 64 bytes.",
            "type": "String",
            "required": false
          },
          {
            "name": "switch_pm_text",
            "description": "If passed, clients will display a button with specified text that switches the user to a private chat with the bot and sends the bot a start message with the parameter \u003cem\u003eswitch_pm_parameter\u003c/em\u003e",
            "type": "String",
            "required": false
          },
          {
            "name": "switch_pm_parameter",
            "description": "\u003ca href\u003d\"/bots#deep-linking\"\u003eDeep-linking\u003c/a\u003e parameter for the /start message sent to the bot when user presses the switch button. 1-64 characters, only \u003ccode\u003eA-Z\u003c/code\u003e, \u003ccode\u003ea-z\u003c/code\u003e, \u003ccode\u003e0-9\u003c/code\u003e, \u003ccode\u003e_\u003c/code\u003e and \u003ccode\u003e-\u003c/code\u003e are allowed.\u003cbr\u003e\u003cbr\u003e\u003cem\u003eExample:\u003c/em\u003e An inline bot that sends YouTube videos can ask the user to connect the bot to their YouTube account to adapt search results accordingly. To do this, it displays a ‘Connect your YouTube account’ button above the results, or even before showing any. The user presses the button, switches to a private chat with the bot and, in doing so, passes a start parameter that instructs the bot to return an oauth link. Once done, the bot can offer a \u003ca href\u003d\"#inlinekeyboardmarkup\"\u003e\u003cem\u003eswitch_inline\u003c/em\u003e\u003c/a\u003e button so that the user can easily return to the chat where they wanted to use the bot\u0027s inline capabilities.",
            "type": "String",
            "required": false
          }
        ]
      }
    ]
  },
  {
    "name": "Payments",
    "description": "\u003cp\u003eYour bot can accept payments from Telegram users. Please see the \u003ca href\u003d\"/bots/payments\"\u003eintroduction to payments\u003c/a\u003e for more details on the process and how to set up payments for your bot. Please note that users will need Telegram v.4.0 or higher to use payments (released on May 18, 2017). \u003c/p\u003e",
    "docTypes": [
      {
        "name": "LabeledPrice",
        "description": "\u003cp\u003eThis object represents a portion of the price for goods or services.\u003c/p\u003e",
        "docFields": [
          {
            "name": "label",
            "description": "Portion label",
            "type": "String",
            "required": true
          },
          {
            "name": "amount",
            "description": "Price of the product in the \u003cem\u003esmallest units\u003c/em\u003e of the \u003ca href\u003d\"/bots/payments#supported-currencies\"\u003ecurrency\u003c/a\u003e (integer, \u003cstrong\u003enot\u003c/strong\u003e float/double). For example, for a price of \u003ccode\u003eUS$ 1.45\u003c/code\u003e pass \u003ccode\u003eamount \u003d 145\u003c/code\u003e. See the \u003cem\u003eexp\u003c/em\u003e parameter in \u003ca href\u003d\"https://core.telegram.org/bots/payments/currencies.json\"\u003ecurrencies.json\u003c/a\u003e, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).",
            "type": "Integer",
            "required": true
          }
        ]
      },
      {
        "name": "Invoice",
        "description": "\u003cp\u003eThis object contains basic information about an invoice.\u003c/p\u003e",
        "docFields": [
          {
            "name": "title",
            "description": "Product name",
            "type": "String",
            "required": true
          },
          {
            "name": "description",
            "description": "Product description",
            "type": "String",
            "required": true
          },
          {
            "name": "start_parameter",
            "description": "Unique bot deep-linking parameter that can be used to generate this invoice",
            "type": "String",
            "required": true
          },
          {
            "name": "currency",
            "description": "Three-letter ISO 4217 \u003ca href\u003d\"/bots/payments#supported-currencies\"\u003ecurrency\u003c/a\u003e code",
            "type": "String",
            "required": true
          },
          {
            "name": "total_amount",
            "description": "Total price in the \u003cem\u003esmallest units\u003c/em\u003e of the currency (integer, \u003cstrong\u003enot\u003c/strong\u003e float/double). For example, for a price of \u003ccode\u003eUS$ 1.45\u003c/code\u003e pass \u003ccode\u003eamount \u003d 145\u003c/code\u003e. See the \u003cem\u003eexp\u003c/em\u003e parameter in \u003ca href\u003d\"https://core.telegram.org/bots/payments/currencies.json\"\u003ecurrencies.json\u003c/a\u003e, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).",
            "type": "Integer",
            "required": true
          }
        ]
      },
      {
        "name": "ShippingAddress",
        "description": "\u003cp\u003eThis object represents a shipping address.\u003c/p\u003e",
        "docFields": [
          {
            "name": "country_code",
            "description": "ISO 3166-1 alpha-2 country code",
            "type": "String",
            "required": true
          },
          {
            "name": "state",
            "description": "State, if applicable",
            "type": "String",
            "required": true
          },
          {
            "name": "city",
            "description": "City",
            "type": "String",
            "required": true
          },
          {
            "name": "street_line1",
            "description": "First line for the address",
            "type": "String",
            "required": true
          },
          {
            "name": "street_line2",
            "description": "Second line for the address",
            "type": "String",
            "required": true
          },
          {
            "name": "post_code",
            "description": "Address post code",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "OrderInfo",
        "description": "\u003cp\u003eThis object represents information about an order.\u003c/p\u003e",
        "docFields": [
          {
            "name": "name",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. User name",
            "type": "String",
            "required": false
          },
          {
            "name": "phone_number",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. User\u0027s phone number",
            "type": "String",
            "required": false
          },
          {
            "name": "email",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. User email",
            "type": "String",
            "required": false
          },
          {
            "name": "shipping_address",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. User shipping address",
            "type": "ShippingAddress",
            "required": false
          }
        ]
      },
      {
        "name": "ShippingOption",
        "description": "\u003cp\u003eThis object represents one shipping option.\u003c/p\u003e",
        "docFields": [
          {
            "name": "id",
            "description": "Shipping option identifier",
            "type": "String",
            "required": true
          },
          {
            "name": "title",
            "description": "Option title",
            "type": "String",
            "required": true
          },
          {
            "name": "prices",
            "description": "List of price portions",
            "type": "List\u003cLabeledPrice\u003e",
            "required": true
          }
        ]
      },
      {
        "name": "SuccessfulPayment",
        "description": "\u003cp\u003eThis object contains basic information about a successful payment.\u003c/p\u003e",
        "docFields": [
          {
            "name": "currency",
            "description": "Three-letter ISO 4217 \u003ca href\u003d\"/bots/payments#supported-currencies\"\u003ecurrency\u003c/a\u003e code",
            "type": "String",
            "required": true
          },
          {
            "name": "total_amount",
            "description": "Total price in the \u003cem\u003esmallest units\u003c/em\u003e of the currency (integer, \u003cstrong\u003enot\u003c/strong\u003e float/double). For example, for a price of \u003ccode\u003eUS$ 1.45\u003c/code\u003e pass \u003ccode\u003eamount \u003d 145\u003c/code\u003e. See the \u003cem\u003eexp\u003c/em\u003e parameter in \u003ca href\u003d\"https://core.telegram.org/bots/payments/currencies.json\"\u003ecurrencies.json\u003c/a\u003e, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).",
            "type": "Integer",
            "required": true
          },
          {
            "name": "invoice_payload",
            "description": "Bot specified invoice payload",
            "type": "String",
            "required": true
          },
          {
            "name": "shipping_option_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Identifier of the shipping option chosen by the user",
            "type": "String",
            "required": false
          },
          {
            "name": "order_info",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Order info provided by the user",
            "type": "OrderInfo",
            "required": false
          },
          {
            "name": "telegram_payment_charge_id",
            "description": "Telegram payment identifier",
            "type": "String",
            "required": true
          },
          {
            "name": "provider_payment_charge_id",
            "description": "Provider payment identifier",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "ShippingQuery",
        "description": "\u003cp\u003eThis object contains information about an incoming shipping query.\u003c/p\u003e",
        "docFields": [
          {
            "name": "id",
            "description": "Unique query identifier",
            "type": "String",
            "required": true
          },
          {
            "name": "from",
            "description": "User who sent the query",
            "type": "User",
            "required": true
          },
          {
            "name": "invoice_payload",
            "description": "Bot specified invoice payload",
            "type": "String",
            "required": true
          },
          {
            "name": "shipping_address",
            "description": "User specified shipping address",
            "type": "ShippingAddress",
            "required": true
          }
        ]
      },
      {
        "name": "PreCheckoutQuery",
        "description": "\u003cp\u003eThis object contains information about an incoming pre-checkout query.\u003c/p\u003e",
        "docFields": [
          {
            "name": "id",
            "description": "Unique query identifier",
            "type": "String",
            "required": true
          },
          {
            "name": "from",
            "description": "User who sent the query",
            "type": "User",
            "required": true
          },
          {
            "name": "currency",
            "description": "Three-letter ISO 4217 \u003ca href\u003d\"/bots/payments#supported-currencies\"\u003ecurrency\u003c/a\u003e code",
            "type": "String",
            "required": true
          },
          {
            "name": "total_amount",
            "description": "Total price in the \u003cem\u003esmallest units\u003c/em\u003e of the currency (integer, \u003cstrong\u003enot\u003c/strong\u003e float/double). For example, for a price of \u003ccode\u003eUS$ 1.45\u003c/code\u003e pass \u003ccode\u003eamount \u003d 145\u003c/code\u003e. See the \u003cem\u003eexp\u003c/em\u003e parameter in \u003ca href\u003d\"https://core.telegram.org/bots/payments/currencies.json\"\u003ecurrencies.json\u003c/a\u003e, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).",
            "type": "Integer",
            "required": true
          },
          {
            "name": "invoice_payload",
            "description": "Bot specified invoice payload",
            "type": "String",
            "required": true
          },
          {
            "name": "shipping_option_id",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Identifier of the shipping option chosen by the user",
            "type": "String",
            "required": false
          },
          {
            "name": "order_info",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Order info provided by the user",
            "type": "OrderInfo",
            "required": false
          }
        ]
      }
    ],
    "docMethods": [
      {
        "name": "sendInvoice",
        "description": "\u003cp\u003eUse this method to send invoices. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target private chat",
            "type": "Integer",
            "required": true
          },
          {
            "name": "title",
            "description": "Product name, 1-32 characters",
            "type": "String",
            "required": true
          },
          {
            "name": "description",
            "description": "Product description, 1-255 characters",
            "type": "String",
            "required": true
          },
          {
            "name": "payload",
            "description": "Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.",
            "type": "String",
            "required": true
          },
          {
            "name": "provider_token",
            "description": "Payments provider token, obtained via \u003ca href\u003d\"https://t.me/botfather\"\u003eBotfather\u003c/a\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "start_parameter",
            "description": "Unique deep-linking parameter that can be used to generate this invoice when used as a start parameter",
            "type": "String",
            "required": true
          },
          {
            "name": "currency",
            "description": "Three-letter ISO 4217 currency code, see \u003ca href\u003d\"/bots/payments#supported-currencies\"\u003emore on currencies\u003c/a\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "prices",
            "description": "Price breakdown, a list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)",
            "type": "List\u003cLabeledPrice\u003e",
            "required": true
          },
          {
            "name": "provider_data",
            "description": "JSON-encoded data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.",
            "type": "String",
            "required": false
          },
          {
            "name": "photo_url",
            "description": "URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service. People like it better when they see what they are paying for.",
            "type": "String",
            "required": false
          },
          {
            "name": "photo_size",
            "description": "Photo size",
            "type": "Integer",
            "required": false
          },
          {
            "name": "photo_width",
            "description": "Photo width",
            "type": "Integer",
            "required": false
          },
          {
            "name": "photo_height",
            "description": "Photo height",
            "type": "Integer",
            "required": false
          },
          {
            "name": "need_name",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if you require the user\u0027s full name to complete the order",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "need_phone_number",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if you require the user\u0027s phone number to complete the order",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "need_email",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if you require the user\u0027s email address to complete the order",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "need_shipping_address",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if you require the user\u0027s shipping address to complete the order",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "send_phone_number_to_provider",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if user\u0027s phone number should be sent to provider",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "send_email_to_provider",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if user\u0027s email address should be sent to provider",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "is_flexible",
            "description": "Pass \u003cem\u003eTrue\u003c/em\u003e, if the final price depends on the shipping method",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e. If empty, one \u0027Pay \u003ccode\u003etotal price\u003c/code\u003e\u0027 button will be shown. If not empty, the first button must be a Pay button.",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "answerShippingQuery",
        "description": "\u003cp\u003eIf you sent an invoice requesting a shipping address and the parameter \u003cem\u003eis_flexible\u003c/em\u003e was specified, the Bot API will send an \u003ca href\u003d\"#update\"\u003eUpdate\u003c/a\u003e with a \u003cem\u003eshipping_query\u003c/em\u003e field to the bot. Use this method to reply to shipping queries. On success, True is returned. \u003c/p\u003e",
        "docParameters": [
          {
            "name": "shipping_query_id",
            "description": "Unique identifier for the query to be answered",
            "type": "String",
            "required": true
          },
          {
            "name": "ok",
            "description": "Specify True if delivery to the specified address is possible and False if there are any problems (for example, if delivery to the specified address is not possible)",
            "type": "Boolean",
            "required": true
          },
          {
            "name": "shipping_options",
            "description": "Required if \u003cem\u003eok\u003c/em\u003e is True. A JSON-serialized array of available shipping options.",
            "type": "List\u003cShippingOption\u003e",
            "required": false
          },
          {
            "name": "error_message",
            "description": "Required if \u003cem\u003eok\u003c/em\u003e is False. Error message in human readable form that explains why it is impossible to complete the order (e.g. \"Sorry, delivery to your desired address is unavailable\u0027). Telegram will display this message to the user.",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "answerPreCheckoutQuery",
        "description": "\u003cp\u003eOnce the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an \u003ca href\u003d\"#update\"\u003eUpdate\u003c/a\u003e with the field \u003cem\u003epre_checkout_query\u003c/em\u003e. Use this method to respond to such pre-checkout queries. On success, True is returned. \u003cstrong\u003eNote:\u003c/strong\u003e The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "pre_checkout_query_id",
            "description": "Unique identifier for the query to be answered",
            "type": "String",
            "required": true
          },
          {
            "name": "ok",
            "description": "Specify \u003cem\u003eTrue\u003c/em\u003e if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order. Use \u003cem\u003eFalse\u003c/em\u003e if there are any problems.",
            "type": "Boolean",
            "required": true
          },
          {
            "name": "error_message",
            "description": "Required if \u003cem\u003eok\u003c/em\u003e is \u003cem\u003eFalse\u003c/em\u003e. Error message in human readable form that explains the reason for failure to proceed with the checkout (e.g. \"Sorry, somebody just bought the last of our amazing black T-shirts while you were busy filling out your payment details. Please choose a different color or garment!\"). Telegram will display this message to the user.",
            "type": "String",
            "required": false
          }
        ]
      }
    ]
  },
  {
    "name": "Telegram Passport",
    "description": "\u003cp\u003e\u003cstrong\u003eTelegram Passport\u003c/strong\u003e is a unified authorization method for services that require personal identification. Users can upload their documents once, then instantly share their data with services that require real-world ID (finance, ICOs, etc.). Please see the \u003ca href\u003d\"/passport\"\u003emanual\u003c/a\u003e for details.\u003c/p\u003e",
    "docTypes": [
      {
        "name": "PassportData",
        "description": "\u003cp\u003eContains information about Telegram Passport data shared with the bot by the user.\u003c/p\u003e",
        "docFields": [
          {
            "name": "data",
            "description": "Array with information about documents and other Telegram Passport elements that was shared with the bot",
            "type": "List\u003cEncryptedPassportElement\u003e",
            "required": true
          },
          {
            "name": "credentials",
            "description": "Encrypted credentials required to decrypt the data",
            "type": "EncryptedCredentials",
            "required": true
          }
        ]
      },
      {
        "name": "PassportFile",
        "description": "\u003cp\u003eThis object represents a file uploaded to Telegram Passport. Currently all Telegram Passport files are in JPEG format when decrypted and don\u0027t exceed 10MB.\u003c/p\u003e",
        "docFields": [
          {
            "name": "file_id",
            "description": "Unique identifier for this file",
            "type": "String",
            "required": true
          },
          {
            "name": "file_size",
            "description": "File size",
            "type": "Integer",
            "required": true
          },
          {
            "name": "file_date",
            "description": "Unix time when the file was uploaded",
            "type": "Integer",
            "required": true
          }
        ]
      },
      {
        "name": "EncryptedPassportElement",
        "description": "\u003cp\u003eContains information about documents or other Telegram Passport elements shared with the bot by the user.\u003c/p\u003e",
        "docFields": [
          {
            "name": "type",
            "description": "Element type. One of “personal_details”, “passport”, “driver_license”, “identity_card”, “internal_passport”, “address”, “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”, “phone_number”, “email”.",
            "type": "String",
            "required": true
          },
          {
            "name": "data",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Base64-encoded encrypted Telegram Passport element data provided by the user, available for “personal_details”, “passport”, “driver_license”, “identity_card”, “internal_passport” and “address” types. Can be decrypted and verified using the accompanying \u003ca href\u003d\"#encryptedcredentials\"\u003eEncryptedCredentials\u003c/a\u003e.",
            "type": "String",
            "required": false
          },
          {
            "name": "phone_number",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. User\u0027s verified phone number, available only for “phone_number” type",
            "type": "String",
            "required": false
          },
          {
            "name": "email",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. User\u0027s verified email address, available only for “email” type",
            "type": "String",
            "required": false
          },
          {
            "name": "files",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Array of encrypted files with documents provided by the user, available for “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration” and “temporary_registration” types. Files can be decrypted and verified using the accompanying \u003ca href\u003d\"#encryptedcredentials\"\u003eEncryptedCredentials\u003c/a\u003e.",
            "type": "List\u003cPassportFile\u003e",
            "required": false
          },
          {
            "name": "front_side",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Encrypted file with the front side of the document, provided by the user. Available for “passport”, “driver_license”, “identity_card” and “internal_passport”. The file can be decrypted and verified using the accompanying \u003ca href\u003d\"#encryptedcredentials\"\u003eEncryptedCredentials\u003c/a\u003e.",
            "type": "PassportFile",
            "required": false
          },
          {
            "name": "reverse_side",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Encrypted file with the reverse side of the document, provided by the user. Available for “driver_license” and “identity_card”. The file can be decrypted and verified using the accompanying \u003ca href\u003d\"#encryptedcredentials\"\u003eEncryptedCredentials\u003c/a\u003e.",
            "type": "PassportFile",
            "required": false
          },
          {
            "name": "selfie",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Encrypted file with the selfie of the user holding a document, provided by the user; available for “passport”, “driver_license”, “identity_card” and “internal_passport”. The file can be decrypted and verified using the accompanying \u003ca href\u003d\"#encryptedcredentials\"\u003eEncryptedCredentials\u003c/a\u003e.",
            "type": "PassportFile",
            "required": false
          },
          {
            "name": "translation",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Array of encrypted files with translated versions of documents provided by the user. Available if requested for “passport”, “driver_license”, “identity_card”, “internal_passport”, “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration” and “temporary_registration” types. Files can be decrypted and verified using the accompanying \u003ca href\u003d\"#encryptedcredentials\"\u003eEncryptedCredentials\u003c/a\u003e.",
            "type": "List\u003cPassportFile\u003e",
            "required": false
          },
          {
            "name": "hash",
            "description": "Base64-encoded element hash for using in \u003ca href\u003d\"#passportelementerrorunspecified\"\u003ePassportElementErrorUnspecified\u003c/a\u003e",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "EncryptedCredentials",
        "description": "\u003cp\u003eContains data required for decrypting and authenticating \u003ca href\u003d\"#encryptedpassportelement\"\u003eEncryptedPassportElement\u003c/a\u003e. See the \u003ca href\u003d\"https://core.telegram.org/passport#receiving-information\"\u003eTelegram Passport Documentation\u003c/a\u003e for a complete description of the data decryption and authentication processes.\u003c/p\u003e",
        "docFields": [
          {
            "name": "data",
            "description": "Base64-encoded encrypted JSON-serialized data with unique user\u0027s payload, data hashes and secrets required for \u003ca href\u003d\"#encryptedpassportelement\"\u003eEncryptedPassportElement\u003c/a\u003e decryption and authentication",
            "type": "String",
            "required": true
          },
          {
            "name": "hash",
            "description": "Base64-encoded data hash for data authentication",
            "type": "String",
            "required": true
          },
          {
            "name": "secret",
            "description": "Base64-encoded secret, encrypted with the bot\u0027s public RSA key, required for data decryption",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorDataField",
        "description": "\u003cp\u003eRepresents an issue in one of the data fields that was provided by the user. The error is considered resolved when the field\u0027s value changes.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003edata\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "The section of the user\u0027s Telegram Passport which has the error, one of “personal_details”, “passport”, “driver_license”, “identity_card”, “internal_passport”, “address”",
            "type": "String",
            "required": true
          },
          {
            "name": "field_name",
            "description": "Name of the data field which has the error",
            "type": "String",
            "required": true
          },
          {
            "name": "data_hash",
            "description": "Base64-encoded data hash",
            "type": "String",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorFrontSide",
        "description": "\u003cp\u003eRepresents an issue with the front side of a document. The error is considered resolved when the file with the front side of the document changes.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003efront_side\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "The section of the user\u0027s Telegram Passport which has the issue, one of “passport”, “driver_license”, “identity_card”, “internal_passport”",
            "type": "String",
            "required": true
          },
          {
            "name": "file_hash",
            "description": "Base64-encoded hash of the file with the front side of the document",
            "type": "String",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorReverseSide",
        "description": "\u003cp\u003eRepresents an issue with the reverse side of a document. The error is considered resolved when the file with reverse side of the document changes.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003ereverse_side\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "The section of the user\u0027s Telegram Passport which has the issue, one of “driver_license”, “identity_card”",
            "type": "String",
            "required": true
          },
          {
            "name": "file_hash",
            "description": "Base64-encoded hash of the file with the reverse side of the document",
            "type": "String",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorSelfie",
        "description": "\u003cp\u003eRepresents an issue with the selfie with a document. The error is considered resolved when the file with the selfie changes.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003eselfie\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "The section of the user\u0027s Telegram Passport which has the issue, one of “passport”, “driver_license”, “identity_card”, “internal_passport”",
            "type": "String",
            "required": true
          },
          {
            "name": "file_hash",
            "description": "Base64-encoded hash of the file with the selfie",
            "type": "String",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorFile",
        "description": "\u003cp\u003eRepresents an issue with a document scan. The error is considered resolved when the file with the document scan changes.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003efile\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "The section of the user\u0027s Telegram Passport which has the issue, one of “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”",
            "type": "String",
            "required": true
          },
          {
            "name": "file_hash",
            "description": "Base64-encoded file hash",
            "type": "String",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorFiles",
        "description": "\u003cp\u003eRepresents an issue with a list of scans. The error is considered resolved when the list of files containing the scans changes.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003efiles\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "The section of the user\u0027s Telegram Passport which has the issue, one of “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”",
            "type": "String",
            "required": true
          },
          {
            "name": "file_hashes",
            "description": "List of base64-encoded file hashes",
            "type": "List\u003cString\u003e",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorTranslationFile",
        "description": "\u003cp\u003eRepresents an issue with one of the files that constitute the translation of a document. The error is considered resolved when the file changes.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003etranslation_file\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "Type of element of the user\u0027s Telegram Passport which has the issue, one of “passport”, “driver_license”, “identity_card”, “internal_passport”, “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”",
            "type": "String",
            "required": true
          },
          {
            "name": "file_hash",
            "description": "Base64-encoded file hash",
            "type": "String",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorTranslationFiles",
        "description": "\u003cp\u003eRepresents an issue with the translated version of a document. The error is considered resolved when a file with the document translation change.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003etranslation_files\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "Type of element of the user\u0027s Telegram Passport which has the issue, one of “passport”, “driver_license”, “identity_card”, “internal_passport”, “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”",
            "type": "String",
            "required": true
          },
          {
            "name": "file_hashes",
            "description": "List of base64-encoded file hashes",
            "type": "List\u003cString\u003e",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      },
      {
        "name": "PassportElementErrorUnspecified",
        "description": "\u003cp\u003eRepresents an issue in an unspecified place. The error is considered resolved when new data is added.\u003c/p\u003e",
        "docFields": [
          {
            "name": "source",
            "description": "Error source, must be \u003cem\u003eunspecified\u003c/em\u003e",
            "type": "String",
            "required": true
          },
          {
            "name": "type",
            "description": "Type of element of the user\u0027s Telegram Passport which has the issue",
            "type": "String",
            "required": true
          },
          {
            "name": "element_hash",
            "description": "Base64-encoded element hash",
            "type": "String",
            "required": true
          },
          {
            "name": "message",
            "description": "Error message",
            "type": "String",
            "required": true
          }
        ]
      }
    ],
    "docMethods": [
      {
        "name": "setPassportDataErrors",
        "description": "\u003cp\u003eInforms a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns \u003cem\u003eTrue\u003c/em\u003e on success.\u003c/p\u003e\u003cp\u003eUse this if the data submitted by the user doesn\u0027t satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "user_id",
            "description": "User identifier",
            "type": "Integer",
            "required": true
          },
          {
            "name": "errors",
            "description": "A JSON-serialized array describing the errors",
            "type": "List\u003cPassportElementError\u003e",
            "required": true
          }
        ]
      }
    ]
  },
  {
    "name": "Games",
    "description": "\u003cp\u003eYour bot can offer users \u003cstrong\u003eHTML5 games\u003c/strong\u003e to play solo or to compete against each other in groups and one-on-one chats. Create games via \u003ca href\u003d\"https://tme/botfather\"\u003e@BotFather\u003c/a\u003e using the \u003cem\u003e/newgame\u003c/em\u003e command. Please note that this kind of power requires responsibility: you will need to accept the terms for each game that your bots will be offering. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eGames are a new type of content on Telegram, represented by the \u003ca href\u003d\"#game\"\u003eGame\u003c/a\u003e and \u003ca href\u003d\"#inlinequeryresultgame\"\u003eInlineQueryResultGame\u003c/a\u003e objects. \u003c/li\u003e \n \u003cli\u003eOnce you\u0027ve created a game via \u003ca href\u003d\"https://t.me/botfather\"\u003eBotFather\u003c/a\u003e, you can send games to chats as regular messages using the \u003ca href\u003d\"#sendgame\"\u003esendGame\u003c/a\u003e method, or use \u003ca href\u003d\"#inline-mode\"\u003einline mode\u003c/a\u003e with \u003ca href\u003d\"#inlinequeryresultgame\"\u003eInlineQueryResultGame\u003c/a\u003e. \u003c/li\u003e \n \u003cli\u003eIf you send the game message without any buttons, it will automatically have a \u0027Play \u003cem\u003eGameName\u003c/em\u003e\u0027 button. When this button is pressed, your bot gets a \u003ca href\u003d\"#callbackquery\"\u003eCallbackQuery\u003c/a\u003e with the \u003cem\u003egame_short_name\u003c/em\u003e of the requested game. You provide the correct URL for this particular user and the app opens the game in the in-app browser. \u003c/li\u003e \n \u003cli\u003eYou can manually add multiple buttons to your game message. Please note that the first button in the first row \u003cstrong\u003emust always\u003c/strong\u003e launch the game, using the field \u003cem\u003ecallback_game\u003c/em\u003e in \u003ca href\u003d\"#inlinekeyboardbutton\"\u003eInlineKeyboardButton\u003c/a\u003e. You can add extra buttons according to taste: e.g., for a description of the rules, or to open the game\u0027s official community. \u003c/li\u003e \n \u003cli\u003eTo make your game more attractive, you can upload a GIF animation that demostrates the game to the users via \u003ca href\u003d\"https://t.me/botfather\"\u003eBotFather\u003c/a\u003e (see \u003ca href\u003d\"https://t.me/gamebot?game\u003dlumberjack\"\u003eLumberjack\u003c/a\u003e for example). \u003c/li\u003e \n \u003cli\u003eA game message will also display high scores for the current chat. Use \u003ca href\u003d\"#setgamescore\"\u003esetGameScore\u003c/a\u003e to post high scores to the chat with the game, add the \u003cem\u003eedit_message\u003c/em\u003e parameter to automatically update the message with the current scoreboard. \u003c/li\u003e \n \u003cli\u003eUse \u003ca href\u003d\"#getgamehighscores\"\u003egetGameHighScores\u003c/a\u003e to get data for in-game high score tables. \u003c/li\u003e \n \u003cli\u003eYou can also add an extra \u003ca href\u003d\"/bots/games#sharing-your-game-to-telegram-chats\"\u003esharing button\u003c/a\u003e for users to share their best score to different chats. \u003c/li\u003e \n \u003cli\u003eFor examples of what can be done using this new stuff, check the \u003ca href\u003d\"https://t.me/gamebot\"\u003e@gamebot\u003c/a\u003e and \u003ca href\u003d\"https://t.me/gamee\"\u003e@gamee\u003c/a\u003e bots. \u003c/li\u003e \n\u003c/ul\u003e",
    "docTypes": [
      {
        "name": "Game",
        "description": "\u003cp\u003eThis object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers.\u003c/p\u003e",
        "docFields": [
          {
            "name": "title",
            "description": "Title of the game",
            "type": "String",
            "required": true
          },
          {
            "name": "description",
            "description": "Description of the game",
            "type": "String",
            "required": true
          },
          {
            "name": "photo",
            "description": "Photo that will be displayed in the game message in chats.",
            "type": "List\u003cPhotoSize\u003e",
            "required": true
          },
          {
            "name": "text",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Brief description of the game or high scores included in the game message. Can be automatically edited to include current high scores for the game when the bot calls \u003ca href\u003d\"#setgamescore\"\u003esetGameScore\u003c/a\u003e, or manually edited using \u003ca href\u003d\"#editmessagetext\"\u003eeditMessageText\u003c/a\u003e. 0-4096 characters.",
            "type": "String",
            "required": false
          },
          {
            "name": "text_entities",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Special entities that appear in \u003cem\u003etext\u003c/em\u003e, such as usernames, URLs, bot commands, etc.",
            "type": "List\u003cMessageEntity\u003e",
            "required": false
          },
          {
            "name": "animation",
            "description": "\u003cem\u003eOptional\u003c/em\u003e. Animation that will be displayed in the game message in chats. Upload via \u003ca href\u003d\"https://t.me/botfather\"\u003eBotFather\u003c/a\u003e",
            "type": "Animation",
            "required": false
          }
        ]
      },
      {
        "name": "GameHighScore",
        "description": "\u003cp\u003eThis object represents one row of the high scores table for a game.\u003c/p\u003e\u003cp\u003eAnd that‘s about all we’ve got for now.\u003cbr\u003eIf you\u0027ve got any questions, please check out our \u003ca href\u003d\"/bots/faq\"\u003e\u003cstrong\u003eBot FAQ »\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e",
        "docFields": [
          {
            "name": "position",
            "description": "Position in high score table for the game",
            "type": "Integer",
            "required": true
          },
          {
            "name": "user",
            "description": "User",
            "type": "User",
            "required": true
          },
          {
            "name": "score",
            "description": "Score",
            "type": "Integer",
            "required": true
          }
        ]
      }
    ],
    "docMethods": [
      {
        "name": "sendGame",
        "description": "\u003cp\u003eUse this method to send a game. On success, the sent \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e is returned. \u003c/p\u003e",
        "docParameters": [
          {
            "name": "chat_id",
            "description": "Unique identifier for the target chat",
            "type": "Integer",
            "required": true
          },
          {
            "name": "game_short_name",
            "description": "Short name of the game, serves as the unique identifier for the game. Set up your games via \u003ca href\u003d\"https://t.me/botfather\"\u003eBotfather\u003c/a\u003e.",
            "type": "String",
            "required": true
          },
          {
            "name": "disable_notification",
            "description": "Sends the message \u003ca href\u003d\"https://telegram.org/blog/channels-2-0#silent-messages\"\u003esilently\u003c/a\u003e. Users will receive a notification with no sound.",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "reply_to_message_id",
            "description": "If the message is a reply, ID of the original message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "reply_markup",
            "description": "A JSON-serialized object for an \u003ca href\u003d\"https://core.telegram.org/bots#inline-keyboards-and-on-the-fly-updating\"\u003einline keyboard\u003c/a\u003e. If empty, one ‘Play game_title’ button will be shown. If not empty, the first button must launch the game.",
            "type": "InlineKeyboardMarkup",
            "required": false
          }
        ]
      },
      {
        "name": "setGameScore",
        "description": "\u003cp\u003eUse this method to set the score of the specified user in a game. On success, if the message was sent by the bot, returns the edited \u003ca href\u003d\"#message\"\u003eMessage\u003c/a\u003e, otherwise returns \u003cem\u003eTrue\u003c/em\u003e. Returns an error, if the new score is not greater than the user\u0027s current score in the chat and \u003cem\u003eforce\u003c/em\u003e is \u003cem\u003eFalse\u003c/em\u003e.\u003c/p\u003e",
        "docParameters": [
          {
            "name": "user_id",
            "description": "User identifier",
            "type": "Integer",
            "required": true
          },
          {
            "name": "score",
            "description": "New score, must be non-negative",
            "type": "Integer",
            "required": true
          },
          {
            "name": "force",
            "description": "Pass True, if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "disable_edit_message",
            "description": "Pass True, if the game message should not be automatically edited to include the current scoreboard",
            "type": "Boolean",
            "required": false
          },
          {
            "name": "chat_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Unique identifier for the target chat",
            "type": "Integer",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Identifier of the sent message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "Required if \u003cem\u003echat_id\u003c/em\u003e and \u003cem\u003emessage_id\u003c/em\u003e are not specified. Identifier of the inline message",
            "type": "String",
            "required": false
          }
        ]
      },
      {
        "name": "getGameHighScores",
        "description": "\u003cp\u003eUse this method to get data for high score tables. Will return the score of the specified user and several of his neighbors in a game. On success, returns an \u003cem\u003eArray\u003c/em\u003e of \u003ca href\u003d\"#gamehighscore\"\u003eGameHighScore\u003c/a\u003e objects.\u003c/p\u003e\u003cblockquote\u003e \n \u003cp\u003eThis method will currently return scores for the target user, plus two of his closest neighbors on each side. Will also return the top three users if the user and his neighbors are not among them. Please note that this behavior is subject to change.\u003c/p\u003e \n\u003c/blockquote\u003e",
        "docParameters": [
          {
            "name": "user_id",
            "description": "Target user id",
            "type": "Integer",
            "required": true
          },
          {
            "name": "chat_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Unique identifier for the target chat",
            "type": "Integer",
            "required": false
          },
          {
            "name": "message_id",
            "description": "Required if \u003cem\u003einline_message_id\u003c/em\u003e is not specified. Identifier of the sent message",
            "type": "Integer",
            "required": false
          },
          {
            "name": "inline_message_id",
            "description": "Required if \u003cem\u003echat_id\u003c/em\u003e and \u003cem\u003emessage_id\u003c/em\u003e are not specified. Identifier of the inline message",
            "type": "String",
            "required": false
          }
        ]
      }
    ]
  }
]